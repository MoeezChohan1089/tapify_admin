com.google.android.material.transformation.FabTransformationSheetBehavior
com.google.android.gms.common.annotation.KeepName
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
kotlinx.coroutines.internal.MainDispatcherFactory
androidx.appcompat.widget.ActionBarContextView
com.google.android.material.button.MaterialButtonToggleGroup
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
androidx.window.core.ExperimentalWindowApi
androidx.window.embedding.ActivityStack
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.window.embedding.SplitRule$Api30Impl
androidx.constraintlayout.widget.Barrier
androidx.activity.ComponentActivity$3
androidx.window.layout.SidecarAdapter$Companion
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.window.layout.WindowMetricsCalculatorCompat
com.google.firebase.iid.FirebaseInstanceIdReceiver
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar
com.google.firebase.components.ComponentRegistrar
androidx.window.layout.HardwareFoldingFeature$Type$Companion
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
android.support.v4.media.MediaBrowserCompat$ItemReceiver
androidx.transition.FragmentTransitionSupport
androidx.window.core.Version$Companion
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
com.google.android.material.snackbar.Snackbar$SnackbarLayout
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.layout.SidecarCompat$Companion
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory
com.google.android.gms.common.api.GoogleApiActivity
androidx.appcompat.widget.ButtonBarLayout
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory
androidx.appcompat.widget.AlertDialogLayout
androidx.core.graphics.drawable.IconCompatParcelizer
com.dexterous.flutterlocalnotifications.models.BitmapSource
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
io.flutter.view.AccessibilityViewEmbedder
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
com.google.firebase.messaging.FirebaseMessaging
com.google.android.material.timepicker.TimePickerView
androidx.savedstate.SavedStateRegistry$1
androidx.fragment.app.Fragment$2
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
com.google.android.material.textfield.TextInputEditText
androidx.window.layout.HardwareFoldingFeature
androidx.window.embedding.SplitInfo
androidx.appcompat.widget.ActionMenuView
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
androidx.window.layout.WindowMetricsCalculator
com.google.android.gms.common.api.Scope
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction
androidx.window.core.Version
com.amolg.flutterbarcodescanner.FlutterBarcodeScannerPlugin$LifeCycleObserver
kotlin.internal.jdk7.JDK7PlatformImplementations
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.google.android.material.transformation.ExpandableBehavior
com.amolg.flutterbarcodescanner.camera.GraphicOverlay
com.google.android.material.textview.MaterialTextView
android.support.v4.media.MediaBrowserCompat$MediaItem
androidx.window.layout.FoldingFeature$Orientation$Companion
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.window.embedding.SplitRule
com.google.android.gms.common.data.DataHolder
android.support.v4.media.session.MediaSessionCompat$Token
androidx.versionedparcelable.ParcelImpl
com.google.firebase.components.ComponentDiscoveryService
com.google.android.gms.common.api.internal.BasePendingResult
android.support.v4.media.AudioAttributesImplApi26Parcelizer
com.google.android.material.internal.NavigationMenuView
dev.fluttercommunity.plus.share.SharePlusPendingIntent
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.core.app.RemoteActionCompatParcelizer
kotlinx.coroutines.CoroutineExceptionHandler
androidx.window.layout.WindowInfoTracker$Companion
androidx.media.AudioAttributesImplApi26
com.dexterous.flutterlocalnotifications.models.NotificationDetails
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
io.flutter.plugin.platform.SingleViewPresentation
androidx.window.R$id
com.google.firebase.FirebaseCommonRegistrar
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation
androidx.window.layout.DisplayFeature
com.google.android.datatransport.cct.CctBackendFactory
com.google.firebase.datatransport.TransportRegistrar
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.appcompat.view.menu.ActionMenuItemView
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.lifecycle.Lifecycling$1
androidx.window.layout.ExtensionInterfaceCompat
androidx.webkit.WebViewClientCompat
com.dexterous.flutterlocalnotifications.models.Time
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
com.google.android.gms.vision.clearcut.LogUtils
androidx.appcompat.widget.ViewStubCompat
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails
androidx.window.layout.SidecarAdapter
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
com.example.tapify_admin.MainActivity
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
com.google.android.material.internal.NavigationMenuItemView
kotlinx.coroutines.android.AndroidExceptionPreHandler
androidx.window.embedding.ExtensionEmbeddingBackend
com.dexterous.flutterlocalnotifications.utils.BooleanUtils
kotlinx.coroutines.android.AndroidDispatcherFactory
com.google.android.material.transformation.ExpandableTransformationBehavior
com.google.android.material.behavior.SwipeDismissBehavior
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.window.layout.ExtensionWindowLayoutInfoBackend
com.google.android.gms.vision.clearcut.DynamiteClearcutLogger
androidx.activity.ComponentActivity$2
androidx.coordinatorlayout.widget.CoordinatorLayout
com.google.android.gms.measurement.AppMeasurement
androidx.window.layout.FoldingFeature$OcclusionType$Companion
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
androidx.window.java.R
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
com.google.android.gms.common.util.DynamiteApi
androidx.appcompat.widget.DialogTitle
com.dexterous.flutterlocalnotifications.RepeatInterval
com.google.android.material.timepicker.ChipTextInputComboView
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
com.dexterous.flutterlocalnotifications.models.IconSource
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.window.layout.FoldingFeature$State
androidx.window.layout.WindowInfoTrackerImpl
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
android.support.v4.media.MediaMetadataCompat
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation
com.google.android.material.bottomappbar.BottomAppBar$Behavior
androidx.recyclerview.widget.LinearLayoutManager
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
androidx.window.embedding.SplitController$Companion
androidx.annotation.Keep
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
androidx.window.embedding.EmbeddingTranslatingCallback
androidx.constraintlayout.widget.ConstraintLayout
androidx.media.AudioAttributesCompat
androidx.window.embedding.EmbeddingBackend
com.google.android.gms.vision.clearcut.VisionClearcutLogger
androidx.window.embedding.SplitPlaceholderRule
androidx.window.layout.FoldingFeature
androidx.window.layout.ActivityCompatHelperApi30
androidx.appcompat.view.menu.ListMenuItemView
androidx.core.app.RemoteActionCompat
com.google.android.gms.measurement.AppMeasurementService
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
com.google.firebase.installations.FirebaseInstallationsRegistrar
com.dexterous.flutterlocalnotifications.models.DateTimeComponents
com.google.android.material.timepicker.ClockFaceView
com.google.android.gms.common.api.Status
androidx.window.layout.WindowLayoutInfo
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
androidx.window.layout.WindowBackend
androidx.appcompat.widget.SearchView
com.google.firebase.messaging.FirebaseMessagingService
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
androidx.window.embedding.SplitRuleParser
com.google.android.material.theme.MaterialComponentsViewInflater
androidx.window.layout.SidecarCompat$FirstAttachAdapter
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.google.android.material.chip.ChipGroup
io.flutter.embedding.engine.FlutterJNI
androidx.recyclerview.widget.StaggeredGridLayoutManager
io.flutter.plugins.GeneratedPluginRegistrant
androidx.media.AudioAttributesCompatParcelizer
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
io.flutter.plugins.urllauncher.WebViewActivity
androidx.window.R
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
androidx.window.layout.SidecarCompat$TranslatingCallback
com.google.android.material.appbar.AppBarLayout$BaseBehavior
androidx.window.layout.EmptyDecorator
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails
com.amolg.flutterbarcodescanner.BarcodeCaptureActivity
androidx.window.layout.WindowMetrics
com.dexterous.flutterlocalnotifications.utils.StringUtils
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
androidx.appcompat.app.AlertController$RecycleListView
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
androidx.window.core.Version$bigInteger$2
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation
com.google.android.material.transformation.FabTransformationBehavior
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
androidx.lifecycle.LiveData$LifecycleBoundObserver
android.support.v4.media.AudioAttributesImplBaseParcelizer
com.google.android.gms.vision.clearcut.LoggingConnectionCallbacks
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
android.support.v4.app.RemoteActionCompatParcelizer
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
androidx.lifecycle.SingleGeneratedAdapterObserver
com.google.android.material.appbar.MaterialToolbar
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
androidx.activity.ImmLeaksCleaner
dev.fluttercommunity.plus.share.ShareFileProvider
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants$ProcessGlobalConfigMapKey
androidx.window.layout.WindowInfoTrackerImpl$Companion
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
android.support.v4.media.session.ParcelableVolumeInfo
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
androidx.window.layout.FoldingFeature$OcclusionType
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.savedstate.Recreator
androidx.window.embedding.ActivityFilter
androidx.media.AudioAttributesImplApi21Parcelizer
androidx.lifecycle.DefaultLifecycleObserver
com.google.firebase.analytics.FirebaseAnalytics
androidx.window.embedding.EmbeddingCompat
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
com.google.android.gms.common.api.internal.LifecycleCallback
androidx.window.R$styleable
com.google.android.gms.vision.internal.Flags
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
com.google.android.material.appbar.AppBarLayout$Behavior
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
androidx.window.embedding.EmbeddingAdapter
androidx.window.embedding.SplitRule$LayoutDir
kotlin.internal.jdk8.JDK8PlatformImplementations
org.chromium.support_lib_boundary.WebAuthnCallbackBoundaryInterface
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
androidx.recyclerview.widget.RecyclerView
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
com.amolg.flutterbarcodescanner.camera.CameraSourcePreview
androidx.viewpager2.adapter.FragmentStateAdapter$5
com.google.android.material.chip.Chip
androidx.window.embedding.SplitPairFilter
androidx.appcompat.widget.Toolbar
com.google.android.material.internal.CheckableImageButton
android.support.v4.media.session.PlaybackStateCompat
androidx.window.R$attr
com.google.android.material.textfield.TextInputLayout
androidx.window.layout.SidecarWindowBackend
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.appcompat.widget.FitWindowsLinearLayout
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
android.support.v4.media.MediaDescriptionCompat
androidx.window.embedding.SplitController
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.google.firebase.messaging.FirebaseMessagingRegistrar
androidx.window.embedding.EmptyEmbeddingComponent
com.google.firebase.iid.FirebaseInstanceId
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
androidx.window.layout.FoldingFeature$State$Companion
androidx.appcompat.view.menu.ExpandedMenuView
androidx.media.AudioAttributesImplApi21
androidx.constraintlayout.widget.Guideline
com.dexterous.flutterlocalnotifications.models.PersonDetails
androidx.media.AudioAttributesImpl
androidx.window.layout.FoldingFeature$Orientation
com.google.android.gms.flags.impl.FlagProviderImpl
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface
androidx.window.layout.HardwareFoldingFeature$Type
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.dexterous.flutterlocalnotifications.models.SoundSource
androidx.window.layout.WindowInfoTracker
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
io.flutter.embedding.engine.FlutterOverlaySurface
com.google.android.gms.common.GooglePlayServicesManifestException
com.google.android.gms.measurement.AppMeasurementJobService
androidx.appcompat.widget.ContentFrameLayout
com.google.android.gms.dynamite.descriptors.com.google.android.gms.flags.ModuleDescriptor
com.google.android.gms.common.internal.ReflectedParcelable
com.google.android.material.snackbar.SnackbarContentLayout
androidx.window.embedding.EmbeddingRule
androidx.media.AudioAttributesImplBaseParcelizer
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
io.flutter.view.FlutterCallbackInformation
androidx.appcompat.widget.ActionBarContainer
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver
androidx.core.app.CoreComponentFactory
com.google.android.material.transformation.FabTransformationScrimBehavior
android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.google.android.material.bottomsheet.BottomSheetBehavior
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
androidx.window.layout.SidecarWindowBackend$Companion
androidx.core.graphics.drawable.IconCompat
androidx.window.layout.ActivityCompatHelperApi24
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface
com.google.android.material.timepicker.ClockHandView
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.google.android.gms.measurement.AppMeasurementReceiver
com.google.android.material.datepicker.MaterialCalendarGridView
com.google.android.material.internal.BaselineLayout
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
androidx.window.layout.SidecarCompat
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.window.embedding.MatcherUtils
androidx.viewpager2.adapter.FragmentStateAdapter$2
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.media.AudioAttributesImplBase
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.google.firebase.iid.Registrar
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants
android.support.v4.media.RatingCompat
org.chromium.support_lib_boundary.StaticsBoundaryInterface
androidx.window.embedding.EmbeddingCompat$Companion
androidx.window.embedding.SplitPairRule
androidx.window.layout.WindowInfoTrackerDecorator
com.dexterous.flutterlocalnotifications.NotificationStyle
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
android.support.v4.media.AudioAttributesCompatParcelizer
com.google.firebase.concurrent.ExecutorsRegistrar
com.google.android.gms.auth.api.signin.GoogleSignInAccount
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.window.layout.DisplayCompatHelperApi28
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
androidx.window.layout.SidecarCompat$DistinctElementCallback
com.google.android.material.button.MaterialButton
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
android.support.v4.media.AudioAttributesImplApi21Parcelizer
androidx.window.embedding.ActivityRule
androidx.versionedparcelable.CustomVersionedParcelable
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType
androidx.recyclerview.widget.GridLayoutManager
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
androidx.core.widget.NestedScrollView
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation
androidx.appcompat.widget.SearchView$SearchAutoComplete
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
androidx.window.layout.WindowMetricsCalculatorDecorator
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
com.dexterous.flutterlocalnotifications.models.MessageDetails
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface
androidx.lifecycle.FullLifecycleObserverAdapter
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
androidx.window.core.Bounds
com.google.firebase.provider.FirebaseInitProvider
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin
androidx.media.AudioAttributesImplApi26Parcelizer
androidx.window.R$styleable: int[] SplitPairFilter
com.google.android.gms.internal.vision.zzfi$zzo: com.google.android.gms.internal.vision.zzkx zzj
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: long zzw
com.google.android.gms.internal.measurement.zzgd: int zzQ
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource DrawableResource
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzli zzg
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String HOUR
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object bigPicture
com.google.android.gms.internal.vision.zzfi$zzj: int zzc
androidx.window.R$styleable: int ActivityFilter_activityAction
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfd: boolean zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String INDETERMINATE
com.google.android.gms.internal.measurement.zzek: int zze
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ID
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_NOTIFICATION_REPEAT_FREQUENCY
com.google.android.gms.vision.clearcut.VisionClearcutLogger: com.google.android.gms.clearcut.ClearcutLogger zza
com.google.android.gms.internal.vision.zzfi$zze: long zzh
com.google.android.gms.internal.clearcut.zzas: int zzex
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.google.android.gms.internal.measurement.zzfv: long zzf
com.google.android.gms.internal.vision.zzfi$zzh: float zzd
androidx.window.embedding.SplitRule: int minSmallestWidth
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzli zzj
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
com.google.android.gms.internal.measurement.zzgd: int zzs
com.google.android.gms.internal.measurement.zzey: boolean zzg
androidx.window.layout.FoldingFeature$State: java.lang.String description
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String START_FOREGROUND_SERVICE
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long when
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DEFAULT_ICON
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.google.android.gms.internal.measurement.zzet: boolean zzi
com.google.android.gms.internal.vision.zzfi$zzf: com.google.android.gms.internal.vision.zzkx zzm
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean bot
com.google.android.gms.internal.vision.zzfi$zzb: com.google.android.gms.internal.vision.zzji zzd
com.google.android.gms.internal.vision.zzfi$zzk: java.lang.String zzd
com.google.android.gms.internal.clearcut.zzge$zzs: com.google.android.gms.internal.clearcut.zzdz zzbg
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgg zzS
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Daily
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
com.google.android.gms.vision.barcode.Barcode$Sms: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $VALUES
com.google.android.gms.vision.barcode.Barcode$Email: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
com.google.android.gms.internal.measurement.zzet: int zze
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_PROGRESS
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
com.google.android.gms.internal.measurement.zzfv: java.lang.String zze
com.google.android.gms.internal.vision.zzfi$zzi: int zzc
com.google.android.gms.internal.vision.zzfi$zzf: java.lang.String zze
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzi
com.google.android.gms.internal.measurement.zzei: int zze
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
com.google.android.gms.vision.barcode.Barcode$DriverLicense: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzff: java.lang.String zzo
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgr: java.lang.String zze
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_SUFFIX
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_MESSAGING_STYLE_ERROR_CODE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_MESSAGE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONTENT_TITLE
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfz: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_BLUE
androidx.window.embedding.ActivityStack: boolean isEmpty
com.google.android.gms.internal.clearcut.zzcg: java.util.Map zzjr
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String summaryText
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
com.google.android.gms.internal.vision.zzfi$zzg: boolean zzh
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_CODE
kotlin.jvm.internal.FunctionReference: int arity
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer color
androidx.window.embedding.SplitInfo: float splitRatio
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.google.android.gms.internal.vision.zzfi$zzn: int zze
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
androidx.window.R$styleable: int SplitPairRule_clearTop
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.android.gms.internal.vision.zzfi$zzk: com.google.android.gms.internal.vision.zzkx zzk
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long millisecondsSinceEpoch
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE_BITMAP_SOURCE
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource ByteArray
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE
com.google.android.gms.internal.vision.zzfi$zzc: com.google.android.gms.internal.vision.zzfi$zzc zzg
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
com.google.android.gms.internal.vision.zzfi$zzf: int zzc
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzr
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String summaryText
com.google.android.gms.internal.measurement.zzgd: long zzm
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String SECOND
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzp
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String sound
com.google.android.gms.internal.measurement.zzek: boolean zzk
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents Time
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String body
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgt zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long timeoutAfter
com.google.android.gms.internal.vision.zzfi$zzn: int zzc
com.google.android.gms.internal.measurement.zzgr: int zzd
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_ICON_ERROR_CODE
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Daily
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.android.gms.internal.measurement.zzfj: java.lang.String zze
com.google.android.exoplayer2.offline.StreamKey: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelName
com.google.android.gms.internal.vision.zzfi$zze: com.google.android.gms.internal.vision.zzkx zzm
com.google.android.gms.internal.vision.zzjb: int zzc
com.google.android.gms.internal.measurement.zzer: int zzd
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ID
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzh
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzg
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showWhen
com.google.android.gms.internal.measurement.zzfz: int zzd
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: int zze
com.google.android.gms.internal.measurement.zzff: java.lang.String zzk
com.google.android.gms.internal.measurement.zzet: int zzd
com.google.android.gms.internal.measurement.zzft: int zzd
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource FlutterBitmapAsset
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String STOP_FOREGROUND_SERVICE
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.google.android.gms.internal.measurement.zzfv: int zzd
com.google.android.gms.internal.measurement.zzek: boolean zzl
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.google.android.gms.internal.measurement.zzet: java.lang.String zzf
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zzl: long zzd
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MESSAGES
com.google.android.gms.vision.clearcut.DynamiteClearcutLogger: java.util.concurrent.ExecutorService zza
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zzh: com.google.android.gms.internal.vision.zzfi$zzh zzj
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.google.android.gms.internal.measurement.zzey: java.lang.String zzf
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMESTAMP
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Weekly
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.google.android.exoplayer2.metadata.icy.IcyInfo: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String summaryText
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_ARRAY_BUFFER
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String groupKey
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CALLED_AT
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_BLUE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_NOTIFICATION
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ContentUri
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer maxProgress
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String scheduledDateTime
com.google.android.gms.vision.barcode.Barcode$GeoPoint: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
kotlinx.coroutines.channels.ArrayChannel: int size
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOffMs
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_WEEKLY_AT_DAY_AND_TIME_METHOD
androidx.window.embedding.SplitPairRule: boolean clearTop
com.google.android.gms.internal.clearcut.zzgw$zza$zzb: java.lang.String zzbis
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzg
com.google.android.gms.internal.clearcut.zzgw$zza: com.google.android.gms.internal.clearcut.zzdz zzbg
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Weekly
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzgr zza
com.google.android.gms.internal.vision.zzfi$zzd: com.google.android.gms.internal.vision.zzjl zzc
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableVibration
com.google.android.gms.internal.vision.zzfi$zzf: long zzj
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.window.R$attr: int clearTop
com.google.android.gms.internal.vision.zzfi$zzc: int zzc
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzem zza
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzu
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction CreateIfNotExists
com.google.android.gms.internal.measurement.zzgd: boolean zzab
com.google.android.gms.internal.vision.zzfi$zzk: com.google.android.gms.internal.vision.zzfi$zza zzf
com.google.android.gms.internal.measurement.zzgy: boolean zzi
com.google.android.gms.internal.measurement.zzfn: int zzd
com.google.android.exoplayer2.metadata.flac.VorbisComment: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_ON_MS
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zzk: com.google.android.gms.internal.vision.zzfi$zzk zzj
com.google.android.gms.internal.measurement.zzcl: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.NotificationStyle style
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LINES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PAYLOAD
com.google.android.gms.internal.measurement.zzgd: long zzU
com.google.android.gms.internal.measurement.zzgd: int zzC
com.google.android.gms.internal.measurement.zzfn: com.google.android.gms.internal.measurement.zzfn zza
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERIODICALLY_SHOW_METHOD
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] $VALUES
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.dexterous.flutterlocalnotifications.models.NotificationDetails: long[] vibrationPattern
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean channelShowBadge
com.google.android.gms.internal.vision.zzfi$zzl: int zzc
com.google.android.gms.internal.measurement.zzff: java.lang.String zzq
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
androidx.window.core.Bounds: int top
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean fullScreenIntent
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzn
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CATEGORY
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
com.google.android.exoplayer2.metadata.mp4.MdtaMetadataEntry: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
com.google.android.gms.internal.measurement.zzek: int zzd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ARE_NOTIFICATIONS_ENABLED_METHOD
com.google.android.gms.internal.vision.zzfi$zzg: int zzc
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzfx zza
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.android.gms.internal.vision.zzfi$zzg: float zzi
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource Uri
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzj
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zzc: com.google.android.gms.internal.vision.zzkx zzh
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PAYLOAD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_NAME
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer importance
com.google.android.gms.measurement.internal.zzlj: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean $assertionsDisabled
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.google.android.gms.internal.measurement.zzgd: long zzk
com.google.android.exoplayer2.metadata.id3.ApicFrame: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.android.gms.internal.vision.zzfi$zzg: int zze
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String uri
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfx: int zzd
androidx.window.layout.SidecarCompat: java.lang.String TAG
androidx.window.R$attr: int splitMinSmallestWidth
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean ongoing
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
com.google.android.gms.internal.vision.zzfi$zzj: com.google.android.gms.internal.vision.zzkx zzj
androidx.window.core.Version: int minor
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Hourly
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
androidx.window.core.Bounds: int left
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_METHOD
com.google.android.gms.internal.measurement.zzfb: int zzd
com.google.android.gms.vision.barcode.Barcode$WiFi: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DAY
com.google.android.gms.internal.clearcut.zzge$zzd: int zztu
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PERSON
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfMonthAndTime
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.Boolean groupConversation
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzH
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PROGRESS
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.google.android.gms.internal.measurement.zzek: boolean zzj
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableLights
com.google.android.gms.internal.vision.zzjb: com.google.android.gms.internal.vision.zzlx zzb
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.google.android.gms.internal.measurement.zzei: boolean zzi
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_SOUND_ERROR_CODE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_LAUNCHED_APP
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzli zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_APP_LAUNCH_DETAILS_METHOD
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
com.google.android.gms.internal.vision.zzfi$zzf: com.google.android.gms.internal.vision.zzjl zzf
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzer zzi
com.google.android.gms.internal.measurement.zzft: long zzh
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean playSound
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String GROUP_ID
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int alwaysExpand
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
com.google.android.gms.internal.measurement.zzfh: int zzd
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String contentTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_LINES
com.google.android.gms.internal.vision.zzfi$zzn: com.google.android.gms.internal.vision.zzkx zzi
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzfb zza
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_GROUP_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer importance
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String payload
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOnMs
com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PRIORITY
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
com.google.android.gms.internal.clearcut.zzr: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.android.gms.internal.clearcut.zzge$zzs: int zzbb
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLORIZED
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer hour
com.google.android.gms.internal.vision.zzfi$zzh: com.google.android.gms.internal.vision.zzkx zzk
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer progress
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND_SOURCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ZONED_SCHEDULE_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ticker
com.google.android.gms.internal.measurement.zzer: java.lang.String zzg
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
androidx.window.R$attr: int splitRatio
com.google.android.gms.internal.measurement.zzgm: int zzd
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfd: com.google.android.gms.internal.measurement.zzfd zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_BLUE
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON_SOURCE
com.google.android.gms.internal.vision.zzfi$zzm: com.google.android.gms.internal.vision.zzkx zzg
com.google.android.exoplayer2.metadata.id3.InternalFrame: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BODY
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_METHOD
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showProgress
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean autoCancel
com.google.android.gms.internal.vision.zzfi$zzd: com.google.android.gms.internal.vision.zzfi$zzd zzd
com.google.android.gms.internal.measurement.zzgd: long zzx
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULE_METHOD
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzet zza
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Messaging
com.google.android.gms.internal.vision.zzfi$zza: com.google.android.gms.internal.vision.zzfi$zza zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MATCH_DATE_TIME_COMPONENTS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_CONVERSATION
com.google.android.gms.internal.vision.zzfi$zzk: java.lang.String zzg
com.google.android.gms.internal.vision.zzfi$zzh: int zzc
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
com.google.android.gms.internal.vision.zzfi$zzb: com.google.android.gms.internal.vision.zzfi$zzb zze
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzfp zza
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzm
com.google.android.gms.internal.vision.zzs: android.os.Parcelable$Creator CREATOR
com.google.android.gms.vision.barcode.Barcode$CalendarEvent: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zze: long zzi
kotlin.jvm.internal.FunctionReference: int flags
com.google.android.gms.internal.vision.zzfi$zzg: boolean zzg
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String DESCRIPTION
com.google.android.gms.internal.measurement.zzfr: int zze
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzer zzf
com.google.android.gms.internal.measurement.zzgg: int zzd
com.google.android.gms.measurement.internal.zzac: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT_TITLE
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String CACHE_DIRECTORY_BASE_PATH
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANT
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer minute
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String id
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean indeterminate
com.google.android.gms.internal.vision.zzfi$zzh: float zzi
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String CHANNEL_ACTION
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableVibration
com.google.android.exoplayer2.metadata.icy.IcyHeaders: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int secondaryActivityAction
com.google.android.gms.internal.vision.zzfi$zzo: boolean zzh
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
com.google.android.gms.internal.measurement.zzgk: int zzd
com.google.android.gms.internal.vision.zzfi$zzn: com.google.android.gms.internal.vision.zzfi$zzh zzf
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String VIBRATION_PATTERN
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_METHOD
com.google.android.gms.internal.measurement.zzgm: long zzh
com.google.android.gms.internal.measurement.zzem: boolean zzg
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzli zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String tag
kotlin.jvm.internal.Lambda: int arity
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean important
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ALL_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean usesChronometer
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzli zzd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: io.flutter.plugin.common.MethodChannel channel
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzh
com.google.android.gms.internal.measurement.zzft: long zzg
com.google.android.gms.internal.measurement.zzgm: long zze
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatBody
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzey zza
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.android.gms.internal.measurement.zzgd: int zzK
com.google.android.gms.internal.vision.zzfi$zzg: com.google.android.gms.internal.vision.zzkx zzk
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String subText
com.google.android.gms.internal.vision.zzfi$zza: int zzc
com.dexterous.flutterlocalnotifications.models.NotificationDetails: int[] additionalFlags
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfWeekAndTime
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.android.gms.internal.vision.zzfi$zzj: long zzf
com.google.android.gms.internal.vision.zzfi$zze: int zzf
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.String conversationTitle
com.google.android.gms.internal.measurement.zzgd: long zzj
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource RawResource
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] $VALUES
com.google.android.gms.internal.vision.zzfi$zzo: com.google.android.gms.internal.vision.zzfi$zzk zze
com.google.android.exoplayer2.metadata.id3.MlltFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgg: int zze
com.google.android.gms.internal.measurement.zzem: java.lang.String zzh
com.google.android.gms.internal.vision.zzfi$zza: com.google.android.gms.internal.vision.zzkx zzg
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatSummaryText
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String description
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzD
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean onlyAlertOnce
androidx.window.core.Bounds: int bottom
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzli zzf
androidx.window.R$attr: int placeholderActivityName
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
androidx.window.core.Version: int patch
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.DateTimeComponents matchDateTimeComponents
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_BIG_PICTURE_ERROR_CODE
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.android.gms.internal.vision.zzfi$zzk: com.google.android.gms.internal.vision.zzfi$zzg zzh
com.google.android.gms.vision.barcode.Barcode$PersonName: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.internal.zzau: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_METHOD
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $VALUES
com.google.android.gms.internal.measurement.zzfr: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String NAME
com.google.android.gms.internal.measurement.zzfh: java.lang.String zzf
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRule: float splitRatio
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
com.google.android.gms.internal.vision.zzfi$zza: java.lang.String zzd
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer audioAttributesUsage
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatContentTitle
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzlh zze
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String ID
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String id
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANCE
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ByteArray
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SHOW_BADGE
com.google.android.gms.internal.measurement.zzfp: boolean zzh
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval EveryMinute
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_GROUP_METHOD
com.google.android.gms.internal.measurement.zzff: long zze
com.google.android.gms.internal.measurement.zzem: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer audioAttributesUsage
com.google.android.gms.internal.measurement.zzgd: int zzg
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONGOING
com.google.android.gms.internal.vision.zzfi$zzf: long zzi
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHARED_PREFERENCES_KEY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_ALPHA
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_DAILY_AT_TIME_METHOD
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigPicture
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int splitLayoutDirection
com.google.android.gms.internal.measurement.zzfp: int zzd
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzli zzf
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
com.google.android.gms.internal.measurement.zzet: boolean zzj
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ID
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean setAsGroupSummary
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzgg zza
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
com.google.android.gms.internal.vision.zzfi$zzn: com.google.android.gms.internal.vision.zzfi$zzc zzg
com.google.android.gms.internal.measurement.zzgk: int zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLAY_SOUND
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: androidx.window.core.Version CURRENT
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean showBadge
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULED_NOTIFICATIONS
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzff zza
com.google.android.gms.internal.vision.zzjb: java.util.Map zzd
androidx.window.embedding.SplitRule: int layoutDirection
com.google.android.gms.internal.clearcut.zzgw$zza$zzb: com.google.android.gms.internal.clearcut.zzgw$zza$zzb zzbiv
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
com.google.android.gms.internal.clearcut.zzge$zzd: java.lang.String zztv
com.google.android.gms.internal.measurement.zzet: boolean zzh
com.google.android.gms.measurement.internal.zzaw: android.os.Parcelable$Creator CREATOR
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
com.google.android.gms.internal.measurement.zzer: boolean zzf
com.google.android.exoplayer2.metadata.id3.GeobFrame: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String KEY
com.google.android.gms.internal.vision.zzfi$zzf: int zzg
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzO
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.google.android.gms.internal.measurement.zzgd: long zzl
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $VALUES
com.google.android.gms.measurement.internal.zzq: android.os.Parcelable$Creator CREATOR
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zzi: com.google.android.gms.internal.vision.zzjl zzf
com.google.android.gms.internal.vision.zzfi$zzn: com.google.android.gms.internal.vision.zzfi$zzd zzd
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzR
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.Long timestamp
com.google.android.gms.internal.clearcut.zzge$zzd: com.google.android.gms.internal.clearcut.zzdz zzbg
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzgk zza
com.google.android.gms.internal.measurement.zzgy: int zze
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
com.google.android.gms.vision.barcode.Barcode$Phone: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND_SOURCE
com.google.android.gms.vision.barcode.Barcode: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent launchIntent
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
com.google.android.gms.internal.vision.zzfi$zzb: com.google.android.gms.internal.vision.zzjj zzc
com.google.android.gms.internal.measurement.zzff: boolean zzl
com.google.android.exoplayer2.metadata.mp4.SlowMotionData$Segment: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_TITLE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.android.gms.internal.measurement.zzfj: com.google.android.gms.internal.measurement.zzfj zza
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
com.google.android.gms.internal.vision.zzfi$zze: java.lang.String zzd
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzt
com.google.android.gms.internal.vision.zzfi$zzn: com.google.android.gms.internal.vision.zzfi$zzn zzh
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String name
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.google.android.gms.internal.clearcut.zzgw$zza: com.google.android.gms.internal.clearcut.zzgw$zza zzbir
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String text
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource BitmapFilePath
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.internal.measurement.zzgd: int zzY
com.google.android.gms.internal.measurement.zzfz: java.lang.String zze
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String PLAY_SOUND
com.google.android.gms.internal.measurement.zzjk: int zzb
androidx.window.layout.SidecarAdapter: java.lang.String TAG
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zzb: com.google.android.gms.internal.vision.zzkx zzf
androidx.window.R$attr: int splitMinWidth
com.google.android.exoplayer2.metadata.emsg.EventMessage: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_MIME_TYPE
com.google.android.exoplayer2.metadata.id3.CommentFrame: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int primaryActivityName
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzli zzf
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_BASE_PATH
com.google.android.gms.internal.measurement.zzfx: java.lang.String zze
com.google.android.gms.internal.measurement.zzei: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction Update
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONVERSATION_TITLE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_RED
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
androidx.window.R$styleable: int[] SplitPairRule
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableLights
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer iconResourceId
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int APP
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledColor
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzgi zza
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfd: boolean zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_VIBRATION
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $VALUES
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String icon
com.google.android.gms.internal.measurement.zzgm: double zzj
com.google.android.gms.internal.vision.zzfi$zzo: int zzc
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.Time repeatTime
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.android.gms.internal.clearcut.zzge$zzs: int zzbfb
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource FilePath
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HIDE_EXPANDED_LARGE_ICON
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.StyleInformation styleInformation
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzgy zza
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataMimeType
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
com.google.android.gms.internal.clearcut.zzgw$zza: com.google.android.gms.internal.clearcut.zzcn zzbiq
com.google.android.gms.internal.measurement.zzer: java.lang.String zzh
com.google.android.gms.internal.clearcut.zzcg: int zzjq
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzli zze
com.google.android.gms.internal.vision.zzfi$zzh: float zzh
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE_INFORMATION
androidx.window.embedding.ActivityStack: java.util.List activities
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zzo: com.google.android.gms.internal.vision.zzfi$zze zzd
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzy
com.google.android.gms.internal.measurement.zzft: int zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_BIG_TEXT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TITLE
androidx.window.R$id: int locale
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
com.google.android.gms.internal.clearcut.zzge$zzd: int zzbb
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzL
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfn zzg
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHORTCUT_ID
com.google.android.gms.internal.measurement.zzky: com.google.android.gms.internal.measurement.zzks zza
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.vision.clearcut.VisionClearcutLogger: boolean zzb
kotlin.jvm.internal.CallableReference: java.lang.String signature
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
com.google.android.gms.internal.measurement.zzgd: boolean zzz
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.google.android.gms.internal.vision.zzfi$zze: long zzg
com.google.android.gms.internal.clearcut.zzgw$zza$zzb: long zzbit
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DateAndTime
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String FULL_SCREEN_INTENT
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.google.android.gms.internal.vision.zzfi$zzd: com.google.android.gms.internal.vision.zzkx zze
com.google.android.gms.internal.measurement.zzlb: int zzd
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzei zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_WHEN
com.google.android.gms.vision.barcode.Barcode$ContactInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzei: boolean zzh
com.google.android.gms.internal.vision.zzfi$zzo: int zzg
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.android.gms.internal.vision.zzfi$zzh: float zzg
com.google.android.gms.phenotype.ExperimentTokens: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfp: int zze
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzg
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_TEXT
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIME_ZONE_NAME
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String contentTitle
com.google.android.gms.internal.vision.zzfi$zzf: java.lang.String zzd
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgp zzf
io.flutter.plugin.platform.SingleViewPresentation: int viewId
androidx.window.R$styleable: int ActivityFilter_activityName
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.google.android.gms.internal.vision.zzfi$zzo: com.google.android.gms.internal.vision.zzfi$zzo zzi
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String REQUEST_PERMISSION_METHOD
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String URI
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String bigText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency scheduledNotificationRepeatFrequency
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
androidx.window.R$id: int rtl
androidx.window.R$styleable: int SplitPairRule_splitRatio
kotlin.jvm.internal.CallableReference: java.lang.String name
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.google.android.gms.internal.vision.zzfi$zzh: float zze
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzlb: java.util.Map zza
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzey zze
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer id
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
androidx.window.R$attr: int secondaryActivityName
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson gson
com.google.android.gms.internal.measurement.zzgd: int zzf
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzP
com.google.android.gms.internal.measurement.zzgy: double zzj
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelId
androidx.window.R$attr: int activityName
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Object icon
androidx.window.embedding.ActivityRule: java.util.Set filters
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfr: com.google.android.gms.internal.measurement.zzfr zza
androidx.window.R$id: int androidx_window_activity_scope
com.google.android.gms.internal.measurement.zzff: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long calledAt
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String MINUTE
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzE
com.google.android.gms.internal.vision.zzfi$zzj: long zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TEXT
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.google.android.gms.clearcut.zze: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatBigText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_ALPHA
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String timeZoneName
com.google.android.gms.internal.measurement.zzff: int zzg
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
com.google.android.gms.internal.measurement.zzfh: com.google.android.gms.internal.measurement.zzfh zza
com.google.android.exoplayer2.metadata.id3.PrivFrame: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: com.dexterous.flutterlocalnotifications.models.PersonDetails person
com.google.android.gms.internal.measurement.zzgd: long zzag
com.google.android.gms.internal.vision.zzfi$zzk: com.google.android.gms.internal.vision.zzfi$zzb zzi
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.google.android.exoplayer2.metadata.mp4.MotionPhotoMetadata: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_STRING
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_MESSAGE
com.google.android.gms.internal.vision.zzfi$zze: java.lang.String zzj
com.google.android.gms.internal.vision.zzfi$zzj: com.google.android.gms.internal.vision.zzfi$zzj zzi
com.google.android.gms.internal.measurement.zzfx: double zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ALLOW_WHILE_IDLE
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_URI
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_DETAILS
androidx.window.R$attr: int activityAction
com.google.android.gms.internal.vision.zzfi$zzg: com.google.android.gms.internal.vision.zzfi$zzg zzj
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.android.gms.internal.measurement.zzff: java.lang.String zzp
com.google.android.gms.internal.measurement.zzfj: java.lang.String zzf
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Activity mainActivity
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
com.google.android.gms.internal.measurement.zzgy: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String sound
com.google.android.gms.clearcut.zzc: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: boolean zzZ
com.google.android.gms.internal.measurement.zzfx: long zzg
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzli zzh
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzv
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
com.google.android.gms.internal.clearcut.zzgw$zza$zzb: int zzya
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLATFORM_SPECIFICS
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzgb zza
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzX
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int NONE
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.android.exoplayer2.metadata.flac.PictureFrame: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON_BITMAP_SOURCE
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Object largeIcon
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzgp zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer day
com.google.android.gms.internal.measurement.zzgd: int zzJ
com.google.android.gms.internal.vision.zzhf: int zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String category
com.google.android.exoplayer2.metadata.id3.ChapterFrame: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUTO_CANCEL
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzli zzd
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String key
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_OFF_MS
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
com.google.android.gms.internal.measurement.zzgd: int zzI
com.google.android.gms.internal.vision.zzfi$zzm: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BOT
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.clearcut.zzgw$zza$zzb: int zzbb
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzW
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object largeIcon
com.google.android.gms.internal.measurement.zzgd: long zzn
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.google.android.gms.vision.clearcut.DynamiteClearcutLogger: com.google.android.gms.vision.clearcut.zzb zzb
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataUri
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.dynamite.descriptors.com.google.android.gms.flags.ModuleDescriptor: java.lang.String MODULE_ID
com.google.android.gms.internal.measurement.zzgd: int zza
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
com.google.android.gms.internal.clearcut.zzas: boolean zzey
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
com.google.android.gms.internal.vision.zzfi$zzc: int zzd
com.google.android.gms.vision.internal.Flags: com.google.android.gms.flags.Flag zza
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
com.google.android.gms.internal.vision.zzfi$zza: java.lang.String zze
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int NOTIFICATION_PERMISSION_REQUEST_CODE
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.clearcut.zzcg$zzd: com.google.android.gms.internal.clearcut.zzby zzjv
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.util.ArrayList messages
com.google.android.gms.internal.clearcut.zzgw$zza$zzb: long zzbiu
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] $VALUES
com.google.android.gms.internal.vision.zzfi$zzm: int zzc
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzi
com.google.android.gms.internal.measurement.zzek: boolean zzh
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String WHEN
androidx.window.core.Version: int major
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean hideExpandedLargeIcon
androidx.window.R$styleable: int[] SplitPlaceholderRule
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zzi: com.google.android.gms.internal.vision.zzfi$zzj zzd
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_ALERT_BEHAVIOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer visibility
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUMMARY_TEXT
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Default
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.RepeatInterval repeatInterval
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_TAG
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: long[] vibrationPattern
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer groupAlertBehavior
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_VIBRATION
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUB_TEXT
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaf
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.data.DataHolder: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATION_MESSAGING_STYLE_METHOD
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zzo: com.google.android.gms.internal.vision.zzfi$zzi zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SET_AS_GROUP_SUMMARY
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Inbox
com.google.android.gms.internal.measurement.zzfv: com.google.android.gms.internal.measurement.zzfv zza
com.google.android.gms.internal.measurement.zzgd: long zzB
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource DrawableResource
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.PermissionRequestListener callback
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
androidx.window.embedding.SplitPairRule: java.util.Set filters
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_LIGHTS
com.google.android.gms.internal.vision.zzfi$zzi: com.google.android.gms.internal.vision.zzfi$zzi zzg
com.google.android.gms.internal.vision.zzfi$zzi: com.google.android.gms.internal.vision.zzkx zzh
com.google.android.gms.internal.vision.zzfi$zzc: int zze
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzlh zzd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Context applicationContext
com.google.android.gms.internal.measurement.zzfx: float zzh
androidx.window.embedding.SplitRule: int minWidth
com.google.android.gms.internal.measurement.zzfb: boolean zzg
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
com.google.android.gms.vision.barcode.Barcode$Address: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
com.google.android.gms.internal.measurement.zzfx: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfh: java.lang.String zze
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
com.google.android.gms.internal.measurement.zzft: java.lang.String zzf
com.google.android.gms.internal.measurement.zzer: int zze
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzG
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzh
com.google.android.gms.internal.clearcut.zzge$zzs: int zzbfa
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean colorized
com.google.android.gms.internal.vision.zzfi$zzm: com.google.android.gms.internal.vision.zzfi$zzm zzf
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzA
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMEOUT_AFTER
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int BROWSER
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
com.google.android.gms.internal.vision.zzfi$zzk: long zze
com.google.android.gms.internal.clearcut.zzge$zzd: java.lang.String zztw
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
com.google.android.gms.internal.clearcut.zzge$zzd: com.google.android.gms.internal.clearcut.zzge$zzd zztx
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String NAME
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String contentTitle
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzli zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_KEY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ADDITIONAL_FLAGS
com.google.android.gms.internal.measurement.zzek: java.lang.String zzf
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.google.android.gms.internal.measurement.zzfd: int zzh
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzad
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.google.android.gms.internal.vision.zzfi$zze: boolean zze
com.google.android.gms.internal.vision.zzfi$zzk: int zzc
com.google.android.gms.internal.measurement.zzgt: int zzd
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.google.android.exoplayer2.metadata.id3.BinaryFrame: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzer: com.google.android.gms.internal.measurement.zzer zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String DESCRIPTION
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.dexterous.flutterlocalnotifications.models.MessageDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails person
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzft zza
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzli zze
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.google.android.gms.dynamite.descriptors.com.google.android.gms.flags.ModuleDescriptor: int MODULE_VERSION
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_SHOW_BADGE
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatTitle
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzek zza
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfz zza
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatLines
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.gms.internal.vision.zzfi$zzg: int zzf
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INITIALIZE_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_TIME
androidx.window.embedding.ActivityRule: boolean alwaysExpand
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzli zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VISIBILITY
androidx.window.embedding.SplitController: boolean sDebug
com.google.android.exoplayer2.metadata.vorbis.VorbisComment: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzg
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String name
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzlh zzf
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
com.google.android.gms.internal.vision.zzfi$zzl: long zze
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfd: java.lang.String zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_GREEN
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzli zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_INTERVAL
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LARGE_ICON_ERROR_CODE
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_RAW_RESOURCE_ERROR_MESSAGE
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
androidx.window.R$attr: int finishSecondaryWithPrimary
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatSummaryText
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer ledColor
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer number
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MAX_PROGRESS
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
androidx.window.R$styleable: int[] ActivityFilter
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
com.google.android.gms.internal.vision.zzfi$zzf: com.google.android.gms.internal.vision.zzfi$zzf zzl
com.google.android.gms.internal.measurement.zzfb: java.lang.String zze
com.google.android.gms.internal.measurement.zzey: int zzd
com.dexterous.flutterlocalnotifications.models.PersonDetails: com.dexterous.flutterlocalnotifications.models.IconSource iconBitmapSource
com.google.android.gms.internal.clearcut.zzcg: com.google.android.gms.internal.clearcut.zzey zzjp
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
androidx.window.core.Bounds: int right
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
com.google.android.gms.internal.vision.zzfi$zze: boolean zzk
androidx.window.core.Version: java.lang.String description
com.google.android.gms.internal.vision.zzfi$zzc: java.lang.String zzf
com.google.android.gms.internal.measurement.zzgd: boolean zzF
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String description
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
com.google.android.gms.internal.measurement.zzlb: com.google.android.gms.internal.measurement.zznl zzc
com.google.android.gms.internal.measurement.zzff: int zzd
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] $VALUES
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VIBRATION_PATTERN
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzq
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzo
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_RED
com.google.android.gms.internal.vision.zzfi$zzj: long zzg
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_GREEN
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_DRAWABLE_RESOURCE_ERROR_MESSAGE
com.google.android.gms.internal.vision.zzfi$zzl: com.google.android.gms.internal.vision.zzfi$zzl zzf
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_ALPHA
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String IMPORTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean allowWhileIdle
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_DATE_TIME
com.google.android.gms.internal.vision.zzfi$zzi: com.google.android.gms.internal.vision.zzfi$zzl zze
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PENDING_NOTIFICATION_REQUESTS_METHOD
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean permissionRequestInProgress
com.google.android.gms.internal.vision.zzfi$zze: com.google.android.gms.internal.vision.zzfi$zze zzl
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource bigPictureBitmapSource
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer priority
com.google.android.exoplayer2.metadata.mp4.SmtaMetadataEntry: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
com.google.android.exoplayer2.metadata.mp4.SlowMotionData: android.os.Parcelable$Creator CREATOR
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_GREEN
com.google.android.gms.internal.measurement.zzfr: long zzf
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaa
androidx.window.R$attr: int finishPrimaryWithSecondary
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String USES_CHRONOMETER
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class baseType
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzh
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String groupId
com.google.android.gms.internal.vision.zzfi$zzf: java.lang.String zzh
com.google.android.gms.internal.vision.zzjb$zzc: com.google.android.gms.internal.vision.zziu zzc
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzj
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String shortcutId
com.google.android.gms.vision.barcode.Barcode$UrlBookmark: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.vision.zzfi$zzl: com.google.android.gms.internal.vision.zzkx zzg
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzi
com.google.android.gms.internal.vision.zzfi$zzj: long zzh
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_RED
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONLY_ALERT_ONCE
com.google.android.gms.internal.vision.zzfi$zzg: int zzd
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer second
kotlin.jvm.internal.CallableReference: java.lang.Class owner
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.google.android.gms.internal.vision.zzfi$zzh: float zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String title
com.google.android.gms.internal.measurement.zzfn: java.lang.String zze
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
androidx.window.R$styleable: int[] ActivityRule
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean playSound
com.google.android.gms.internal.measurement.zzfd: int zzd
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
com.google.android.gms.internal.vision.zzfi$zzf: com.google.android.gms.internal.vision.zzjl zzk
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_DESCRIPTION
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_LIGHTS
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Media
com.google.android.gms.internal.vision.zzfi$zzm: int zze
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String name
com.google.android.gms.internal.measurement.zzgd: long zzV
com.google.android.gms.internal.measurement.zzfj: int zzd
com.google.android.gms.internal.measurement.zzgm: com.google.android.gms.internal.measurement.zzgm zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MILLISECONDS_SINCE_EPOCH
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
kotlinx.coroutines.CancelledContinuation: int _resumed
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_CODE
com.google.android.gms.internal.vision.zzfi$zze: int zzc
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.util.ArrayList lines
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzlg zzT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ACTION
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelDescription
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String METHOD_CHANNEL
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TICKER
com.google.android.gms.vision.barcode.Barcode$CalendarDateTime: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
com.google.android.gms.vision.clearcut.DynamiteClearcutLogger: com.google.android.gms.vision.clearcut.VisionClearcutLogger zzc
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzae
com.google.android.gms.internal.measurement.zzgm: float zzi
com.google.android.gms.internal.measurement.zzer: java.lang.String zzi
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzfz zzac
com.google.android.exoplayer2.drm.DrmInitData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: long zzM
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.window.R$id: int ltr
com.google.android.gms.internal.clearcut.zzge$zzs: com.google.android.gms.internal.clearcut.zzge$zzs zzbfc
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DRAWABLE
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgd zzd
com.google.android.gms.internal.clearcut.zzgw$zza$zzb: com.google.android.gms.internal.clearcut.zzdz zzbg
com.google.android.exoplayer2.metadata.Metadata: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.google.android.gms.internal.vision.zzk: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzey: int zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ID
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_SUMMARY_TEXT
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
com.google.android.gms.internal.measurement.zzgd: long zzN
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzem zzg
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
com.google.android.gms.internal.vision.zzfi$zzj: int zzd
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzk
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
com.google.android.exoplayer2.decoder.SimpleDecoder: void releaseInputBufferInternal(com.google.android.exoplayer2.decoder.DecoderInputBuffer)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
org.threeten.bp.chrono.HijrahDate: int getDayOfCycle(long,int)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.google.android.exoplayer2.source.dash.manifest.UrlTemplate: java.lang.String buildUri(java.lang.String,long,int,long)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
org.threeten.bp.ZoneRegion: java.lang.Object writeReplace()
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.google.android.gms.internal.clearcut.zzds: com.google.android.gms.internal.clearcut.zzef zzad(int)
androidx.window.embedding.SplitRule: int hashCode()
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
androidx.collection.LongSparseArray: java.lang.Object valueAt(int)
com.google.android.exoplayer2.drm.DrmInitData: DrmInitData(java.lang.String,boolean,com.google.android.exoplayer2.drm.DrmInitData$SchemeData[])
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setActivity(android.app.Activity)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.constraintlayout.solver.LinearSystem: int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row)
androidx.constraintlayout.solver.LinearSystem: void releaseRows()
com.google.android.material.button.MaterialButton: int getCornerRadius()
androidx.collection.ArraySet: java.lang.Object removeAt(int)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.exoplayer2.decoder.SimpleDecoder: void releaseOutputBufferInternal(com.google.android.exoplayer2.decoder.DecoderOutputBuffer)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.constraintlayout.solver.Pools$SimplePool: void releaseAll(java.lang.Object[],int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeat(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation: StyleInformation()
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.Lambda: java.lang.String toString()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
com.google.android.gms.measurement.internal.zzam: void zzB(java.lang.String,java.util.List)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
org.threeten.bp.OffsetTime: java.lang.Object writeReplace()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.google.android.gms.internal.measurement.zzjf: <clinit>()
androidx.constraintlayout.solver.widgets.analyzer.VerticalWidgetRun: void apply()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.FirebaseInstanceId getInstance(com.google.firebase.FirebaseApp)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void requestPermission(com.dexterous.flutterlocalnotifications.PermissionRequestListener)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
kotlinx.coroutines.internal.ThreadState: void restore(kotlin.coroutines.CoroutineContext)
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: void getNextChunk(long,long,java.util.List,com.google.android.exoplayer2.source.chunk.ChunkHolder)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
org.threeten.bp.chrono.IsoChronology: java.lang.Object readResolve()
com.google.android.gms.internal.measurement.zzob: com.google.android.gms.internal.measurement.zzob[] values()
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object pollInternal()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void discardBuffer(long,boolean)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.google.android.gms.internal.clearcut.zzcq: com.google.android.gms.internal.clearcut.zzcq[] values()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: boolean onPlaylistError(android.net.Uri,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void applyGrouping(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.google.android.gms.measurement.internal.zzah: com.google.android.gms.measurement.internal.zzah[] values()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
org.threeten.bp.chrono.HijrahDate: int getMaximumDayOfYear()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
androidx.core.app.NotificationCompatBuilder$Api17Impl: android.app.Notification$Builder setShowWhen(android.app.Notification$Builder,boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
androidx.collection.ArraySet: void clear()
com.google.android.material.shape.ShapeAppearancePathProvider: ShapeAppearancePathProvider()
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.Format[] getStreamFormats()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: boolean equals(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.ArrayList loadScheduledNotifications(android.content.Context)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
androidx.constraintlayout.solver.SolverVariableValues: androidx.constraintlayout.solver.SolverVariable getVariable(int)
org.threeten.bp.Year: java.lang.Object writeReplace()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.exoplayer2.ExoPlayerImplInternal: void resetInternal(boolean,boolean,boolean,boolean)
androidx.webkit.internal.ApiHelperForOMR1: void startSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
com.google.android.gms.measurement.internal.zzep: java.lang.String zze(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.constraintlayout.solver.widgets.Barrier: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData merge(com.google.android.exoplayer2.drm.DrmInitData)
com.google.android.exoplayer2.ExoPlayerImplInternal: void enableRenderers()
org.threeten.bp.chrono.Chronology: java.lang.Object writeReplace()
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.google.android.exoplayer2.source.TrackGroup: void verifyCorrectness()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNextRepeatingNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationManagerCompat getNotificationManager(android.content.Context)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: boolean directMeasureWithOrientation(boolean,int)
com.google.android.gms.internal.clearcut.zzfw: com.google.android.gms.internal.clearcut.zzfx zzaq(int)
androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
com.google.android.exoplayer2.source.SampleQueue: int peekSampleMetadata(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean,boolean,com.google.android.exoplayer2.source.SampleQueue$SampleExtrasHolder)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int readData(int,com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,int)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: DrawableContainer$DrawableContainerState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.google.android.gms.internal.measurement.zzix: com.google.android.gms.internal.measurement.zzix zza(java.lang.Object[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void registerWith(io.flutter.plugin.common.PluginRegistry$Registrar)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.NotificationStyle: NotificationStyle(java.lang.String,int)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forIncomingCall(android.app.Person,android.app.PendingIntent,android.app.PendingIntent)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: NotificationDetails()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
com.google.gson.stream.JsonReader: java.lang.String nextName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void showNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser valueOf(java.lang.String)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
com.google.android.exoplayer2.ExoPlayerImplInternal: void enableRenderer(int,boolean)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotificationMatchingDateComponents(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: InboxStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle$Api24Impl: android.app.Notification$DecoratedCustomViewStyle createDecoratedCustomViewStyle()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.ExoPlayerImplInternal: void updateLoadControlTrackSelection(com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelectorResult)
com.google.common.base.Function: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.threeten.bp.zone.StandardZoneRules: java.lang.Object writeReplace()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.constraintlayout.solver.widgets.Guideline: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
androidx.constraintlayout.solver.LinearSystem: void reset()
androidx.collection.LongSparseArray: void clear()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.tekartik.sqflite.Database: boolean doQuery(com.tekartik.sqflite.operation.Operation)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
com.google.android.exoplayer2.ExoPlayerImpl: ExoPlayerImpl(com.google.android.exoplayer2.ExoPlayer$Builder,com.google.android.exoplayer2.Player)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.google.android.material.chip.Chip: void setTextAppearance(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.google.common.collect.ImmutableMap$Builder: void sortEntries()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
kotlinx.coroutines.internal.ArrayQueue: void addLast(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.constraintlayout.solver.Pools$SimplePool: boolean release(java.lang.Object)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.source.TrackGroup: int indexOf(com.google.android.exoplayer2.Format)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setCategory(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.google.android.material.button.MaterialButton: int getInsetBottom()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.utils.StringUtils: java.lang.Boolean isNullOrEmpty(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.google.common.collect.RegularImmutableList: int copyIntoArray(java.lang.Object[],int)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit[] values()
com.google.android.exoplayer2.util.Util: java.lang.String maybeReplaceLegacyLanguageTags(java.lang.String)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
androidx.window.core.Version: int getPatch()
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle createMessagingStyle(java.lang.CharSequence)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)
androidx.constraintlayout.solver.LinearSystem: void computeValues()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void seek(long,long)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int getTrackIndexOfNextReadSample(long)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle createBigTextStyle(android.app.Notification$Builder)
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: int checkPattern(java.lang.String)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra[] values()
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.google.android.exoplayer2.metadata.Metadata: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
androidx.window.core.Bounds: Bounds(int,int,int,int)
org.threeten.bp.zone.StandardZoneRules: java.lang.String toString()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.cardview.widget.CardView: int getContentPaddingRight()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void buildTracksFromSampleStreams()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.dexterous.flutterlocalnotifications.models.IconSource: IconSource(java.lang.String,int)
com.google.android.material.chip.Chip: float getChipIconSize()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivityForConfigChanges()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
com.google.android.exoplayer2.util.TimedValueQueue: void clear()
org.threeten.bp.chrono.HijrahChronology: java.lang.Object readResolve()
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: ChapterTocFrame(android.os.Parcel)
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.google.android.gms.internal.flags.zzb: android.os.IBinder asBinder()
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: boolean print(org.threeten.bp.format.DateTimePrintContext,java.lang.StringBuilder)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.analyzer.HorizontalWidgetRun: void apply()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzcf)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.google.android.exoplayer2.ExoPlayerImplInternal: void resetRendererPosition(long)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int getExtractedSamplesCount()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.transition.ChangeBounds: java.lang.String[] getTransitionProperties()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void buildAndPrepareSampleStreamWrappers(long)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
com.google.android.gms.flags.impl.FlagProviderImpl: boolean getBooleanFlagValue(java.lang.String,boolean,int)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.core.app.AlarmManagerCompat$Api23Impl: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
com.google.android.gms.internal.clearcut.zzcb: <clinit>()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $values()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
com.dexterous.flutterlocalnotifications.models.Time: Time()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode[] values()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.webkit.internal.ApiHelperForOMR1: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: void parseVideoSampleEntry(com.google.android.exoplayer2.util.ParsableByteArray,int,int,int,int,int,com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: com.google.android.exoplayer2.video.spherical.CameraMotionListener getCameraMotionListener()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int readData(int,com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,int)
androidx.webkit.internal.ApiHelperForM: int getErrorCode(android.webkit.WebResourceError)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
androidx.recyclerview.widget.GridLayoutManager: void ensureViewSet()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean isReady(int)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long seekToUs(long)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: android.view.Surface getVideoSurface()
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void startLoading()
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.gms.internal.clearcut.zzab: java.util.Map zzi()
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus valueOf(java.lang.String)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: long seekToUs(long)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] values()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean areAllEndsEqual()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.google.android.exoplayer2.PlaylistTimeline: java.util.List getChildTimelines()
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: NotificationChannelDetails()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.core.app.RemoteInput: java.lang.CharSequence[] getChoices()
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
io.flutter.embedding.android.KeyEmbedderResponder: void synchronizePressingKey(io.flutter.embedding.android.KeyboardMap$PressingGoal,boolean,long,long,android.view.KeyEvent,java.util.ArrayList)
com.google.android.exoplayer2.ExoPlayerImplInternal: void enableRenderers(boolean[])
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.google.android.exoplayer2.audio.AudioAttributes$Api29: void setAllowedCapturePolicy(android.media.AudioAttributes$Builder,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy valueOf(java.lang.String)
androidx.window.core.Bounds: java.lang.String toString()
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationChannels(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedId(int)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readPlatformSpecifics(java.util.Map,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra[] values()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)
org.threeten.bp.chrono.JapaneseChronology: java.lang.Object readResolve()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes build(android.media.AudioAttributes$Builder)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails from(java.util.Map)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setInboxStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest$StreamElement: android.net.Uri buildRequestUri(int,int)
com.google.android.gms.internal.measurement.zznl: com.google.android.gms.internal.measurement.zznl zze(com.google.android.gms.internal.measurement.zznl,com.google.android.gms.internal.measurement.zznl)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
androidx.window.embedding.SplitRule: float getSplitRatio()
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
org.threeten.bp.chrono.JapaneseEra: java.lang.Object writeReplace()
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDateMatchingDateTimeComponents(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLedDetails(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api28Impl: android.app.Notification$MessagingStyle$Message createMessage(java.lang.CharSequence,long,android.app.Person)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
org.threeten.bp.Year: java.lang.Object readResolve()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.google.android.gms.internal.clearcut.zzey: int zzas()
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
com.google.android.gms.internal.measurement.zzjf: java.lang.Object[] zze()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
com.google.android.exoplayer2.ExoPlayerImplInternal: void handlePlaybackParameters(com.google.android.exoplayer2.PlaybackParameters,float,boolean,boolean)
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: com.google.android.exoplayer2.source.chunk.BaseMediaChunk discardUpstreamMediaChunksFromIndex(int)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.internal.zzep: java.lang.String zzd(java.lang.String)
org.threeten.bp.chrono.ThaiBuddhistEra: org.threeten.bp.chrono.ThaiBuddhistEra valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.audio.AudioCapabilities$Api29: int getMaxSupportedChannelCountForPassthrough(int,int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void onLoadCanceled(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable,long,long,boolean)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.google.android.exoplayer2.source.ClippingMediaPeriod: long seekToUs(long)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.google.gson.stream.JsonReader: java.lang.String getPath()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
com.google.android.gms.measurement.internal.zzlo: boolean zzaa(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map access$200(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] getAdjustedCycle(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.gms.internal.clearcut.zzey: void zza(com.google.android.gms.internal.clearcut.zzfr)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: long getAvailableLiveDurationUs(long,long)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.core.app.NotificationCompat$CallStyle$Api16Impl: void setBuilder(android.app.Notification$CallStyle,android.app.Notification$Builder)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra[] values()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
androidx.constraintlayout.solver.PriorityGoalRow: androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.exoplayer2.extractor.ogg.OpusReader: boolean readHeaders(com.google.android.exoplayer2.util.ParsableByteArray,long,com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)
com.google.android.gms.internal.vision.zzfi$zze$zzb: com.google.android.gms.internal.vision.zzfi$zze$zzb[] values()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long seekToUs(long)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.vision.zzlb: com.google.android.gms.internal.vision.zzjl zza(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setAllRendererStreamsFinal(long)
com.google.android.gms.internal.clearcut.zzey: void zza(java.lang.StringBuilder,int)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Integer tryParseInt(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setAnswerButtonColorHint(android.app.Notification$CallStyle,int)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
org.threeten.bp.Instant: java.lang.Object readResolve()
com.google.android.gms.internal.measurement.zznl: void zzl(int)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.google.android.gms.common.internal.GetServiceRequest: GetServiceRequest(int,int,int,java.lang.String,android.os.IBinder,com.google.android.gms.common.api.Scope[],android.os.Bundle,android.accounts.Account,com.google.android.gms.common.Feature[],com.google.android.gms.common.Feature[],boolean,int,boolean,java.lang.String)
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
androidx.appcompat.widget.SearchView: int getMaxWidth()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
org.threeten.bp.Ser: java.lang.Object readResolve()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
com.google.firebase.iid.Registrar: Registrar()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.google.android.material.button.MaterialButton: int getIconPadding()
androidx.webkit.internal.ApiHelperForP: void setDataDirectorySuffix(java.lang.String)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.google.android.gms.measurement.internal.zzam: java.lang.String[] zzS()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannelGroups(android.app.NotificationManager)
org.threeten.bp.chrono.HijrahDate: java.lang.Object writeReplace()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.graphics.drawable.IconCompat getIconFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource)
com.google.android.exoplayer2.drm.FrameworkMediaDrm$Api31: boolean requiresSecureDecoder(android.media.MediaDrm,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
org.threeten.bp.chrono.JapaneseDate: java.lang.Object writeReplace()
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
org.threeten.bp.chrono.MinguoEra: org.threeten.bp.chrono.MinguoEra valueOf(java.lang.String)
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
com.google.android.exoplayer2.ExoPlayerImplInternal: void reselectTracksInternal()
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.android.exoplayer2.text.subrip.SubripSubtitle: java.util.List getCues(long)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readGroupingInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotificationMessagingStyle(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.source.hls.HlsChunkSource: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
androidx.collection.LongSparseArray: LongSparseArray(int)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setVerificationText(android.app.Notification$CallStyle,java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.google.android.gms.measurement.internal.zzam: java.lang.String[] zzT()
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
com.google.android.gms.internal.measurement.zznl: void zzj(int,java.lang.Object)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
com.google.android.gms.common.data.DataHolder: void finalize()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.google.android.exoplayer2.trackselection.TrackSelectorResult: boolean isEquivalent(com.google.android.exoplayer2.trackselection.TrackSelectorResult,int)
androidx.constraintlayout.solver.widgets.Chain: void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzck)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
androidx.webkit.internal.ApiHelperForM: void setWebMessageCallback(android.webkit.WebMessagePort,androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat,android.os.Handler)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
org.threeten.bp.LocalDate: java.lang.Object writeReplace()
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.google.android.gms.common.GoogleSignatureVerifier: boolean zzb(android.content.pm.PackageInfo,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.google.android.gms.internal.measurement.zzmr: java.lang.Object set(int,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.google.android.exoplayer2.ExoPlayerImplInternal: ExoPlayerImplInternal(com.google.android.exoplayer2.Renderer[],com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.trackselection.TrackSelectorResult,com.google.android.exoplayer2.LoadControl,com.google.android.exoplayer2.upstream.BandwidthMeter,int,boolean,com.google.android.exoplayer2.analytics.AnalyticsCollector,com.google.android.exoplayer2.SeekParameters,com.google.android.exoplayer2.LivePlaybackSpeedControl,long,boolean,android.os.Looper,com.google.android.exoplayer2.util.Clock,com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdateListener,com.google.android.exoplayer2.analytics.PlayerId,android.os.Looper)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.window.embedding.SplitInfo: java.lang.String toString()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
com.google.android.gms.common.internal.zzm: void zza(com.google.android.gms.common.internal.GetServiceRequest,android.os.Parcel,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.webkit.internal.ApiHelperForOMR1: void proceed(android.webkit.SafeBrowsingResponse,boolean)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.google.android.gms.internal.vision.zzgz: com.google.android.gms.internal.vision.zzgz[] values()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
com.google.android.gms.flags.impl.FlagProviderImpl: int getIntFlagValue(java.lang.String,int,int)
com.google.android.gms.internal.clearcut.zzfq: com.google.android.gms.internal.clearcut.zzfq[] values()
com.google.common.collect.ImmutableMap$Builder: void ensureCapacity(int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.extractor.ts.SeiReader: void consume(long,com.google.android.exoplayer2.util.ParsableByteArray)
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem)
com.google.android.exoplayer2.source.hls.HlsChunkSource: int getChunkPublicationState(com.google.android.exoplayer2.source.hls.HlsMediaChunk)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
com.google.android.material.chip.Chip: float getChipStartPadding()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getDropDataProvider()
androidx.core.app.NotificationCompat$Style$Api24Impl: void setChronometerCountDown(android.widget.RemoteViews,int,boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationDetails from(java.util.Map)
androidx.constraintlayout.widget.ConstraintSet: void populateConstraint(android.content.Context,androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
androidx.window.embedding.SplitPairRule: int hashCode()
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.collection.SparseArrayCompat: void remove(int)
com.google.common.collect.RegularImmutableSet: com.google.common.collect.ImmutableList createAsList()
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] $values()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
kotlin.jvm.internal.FunctionReference: boolean isInline()
com.google.android.gms.vision.clearcut.LogUtils: java.lang.String zzb(android.content.Context)
com.google.android.gms.internal.measurement.zzcb: com.google.android.gms.internal.measurement.zzcc asInterface(android.os.IBinder)
com.google.android.gms.internal.measurement.zzlm: com.google.android.gms.internal.measurement.zzlm[] values()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setVerificationIcon(android.app.Notification$CallStyle,android.graphics.drawable.Icon)
org.threeten.bp.YearMonth: java.lang.Object readResolve()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void setClearCachedDataIntervalMs(int)
io.flutter.embedding.engine.loader.FlutterLoader$$InternalSyntheticLambda$3$a1974c23c7f061572c046526b0b7f52ef9eca27db91f5b3ba8d4830836328e7e$0: void run()
com.google.android.exoplayer2.source.hls.HlsChunkSource: boolean onPlaylistError(android.net.Uri,long)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
androidx.collection.SparseArrayCompat: void gc()
androidx.cardview.widget.CardView: int getContentPaddingLeft()
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.google.android.gms.measurement.internal.zzlo: android.os.Bundle zzu(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean)
com.google.android.gms.internal.vision.zzlx: com.google.android.gms.internal.vision.zzlx zza(com.google.android.gms.internal.vision.zzlx,com.google.android.gms.internal.vision.zzlx)
com.google.android.gms.internal.clearcut.zzed: java.lang.reflect.Field zzdb()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void onPlaylistChanged()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzbn: android.os.IBinder asBinder()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
androidx.core.app.BundleCompat$Api18Impl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
com.google.firebase.iid.Registrar: java.util.List getComponents()
com.google.android.exoplayer2.ExoPlayerImplInternal: void startRenderers()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle bigText(android.app.Notification$BigTextStyle,java.lang.CharSequence)
org.threeten.bp.ZoneOffset: java.lang.Object readResolve()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: DashMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
com.google.android.exoplayer2.ExoPlayerImplInternal: void updateTrackSelectionPlaybackSpeed(float)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
org.threeten.bp.Month: org.threeten.bp.Month of(int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
androidx.window.R$attr: R$attr()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannels(android.app.NotificationManager)
com.google.android.gms.internal.measurement.zznl: int hashCode()
com.google.android.exoplayer2.source.hls.HlsChunkSource: boolean obtainsChunksForPlaylist(android.net.Uri)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.android.gms.common.GooglePlayServicesUtilLight: int isGooglePlayServicesAvailable(android.content.Context,int)
androidx.core.app.NotificationCompat$CallStyle$Api24Impl: android.app.Notification$Builder clearActions(android.app.Notification$Builder)
androidx.window.core.Version: int compareTo(java.lang.Object)
com.google.android.gms.internal.vision.zzlb: java.lang.Object get(int)
androidx.constraintlayout.solver.ArrayLinkedVariables: java.lang.String toString()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.constraintlayout.solver.ArrayLinkedVariables: void clear()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.upstream.SlidingPercentile: void addSample(int,float)
com.google.android.gms.flags.zzd: com.google.android.gms.flags.zzc asInterface(android.os.IBinder)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: void updateManifest(com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.webkit.internal.ApiHelperForM: androidx.webkit.WebMessageCompat createWebMessageCompat(android.webkit.WebMessage)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.android.gms.internal.clearcut.zzcb: com.google.android.gms.internal.clearcut.zzcb[] values()
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
androidx.webkit.internal.ApiHelperForO: android.webkit.WebViewClient getWebViewClient(android.webkit.WebView)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
com.google.android.exoplayer2.decoder.SimpleDecoder: com.google.android.exoplayer2.decoder.DecoderInputBuffer dequeueInputBuffer()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean finishedReadingChunk(com.google.android.exoplayer2.source.hls.HlsMediaChunk)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle setBigContentTitle(android.app.Notification$BigTextStyle,java.lang.CharSequence)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
org.threeten.bp.chrono.HijrahDate: long yearToGregorianEpochDay(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
com.google.android.exoplayer2.MediaPeriodHolder: void disableTrackSelectionsInResult()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.android.gms.internal.clearcut.zzha: int hashCode()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
com.google.android.exoplayer2.ExoPlayerImplInternal: void notifyTrackSelectionDiscontinuity()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: void setUseSensorRotation(boolean)
com.google.android.material.shape.ShapeAppearancePathProvider: boolean pathOverlapsCorner(android.graphics.Path,int)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
org.threeten.bp.format.DateTimeFormatterBuilder$OffsetIdPrinterParser: java.lang.String toString()
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
com.google.android.gms.measurement.internal.zzam: java.lang.String[] zzP()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigTextStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
androidx.core.app.ActivityCompat$Api31Impl: boolean isLaunchedFromBubble(android.app.Activity)
com.google.android.gms.internal.clearcut.zzha: com.google.android.gms.internal.clearcut.zzha zzgd()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.hls.HlsMediaChunk discardUpstreamMediaChunksFromIndex(int)
com.google.android.material.chip.Chip: void setMinLines(int)
com.google.android.gms.measurement.internal.zzep: java.lang.String zzf(java.lang.String)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.google.common.collect.RegularImmutableMap$EntrySet: java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.google.gson.stream.JsonWriter: <clinit>()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.google.android.exoplayer2.metadata.Metadata: int hashCode()
com.google.android.gms.internal.measurement.zzjf: boolean contains(java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
com.google.android.exoplayer2.extractor.avi.AviExtractor: com.google.android.exoplayer2.extractor.avi.ChunkReader[] access$100(com.google.android.exoplayer2.extractor.avi.AviExtractor)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] values()
com.google.android.gms.measurement.internal.zzhb: java.lang.String zza(java.lang.String)
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: HlsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
androidx.window.core.Bounds: boolean isZero()
com.google.android.exoplayer2.ExoPlayerImplInternal: void doSomeWork()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void discardBuffer(long,boolean)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: android.app.Notification$MessagingStyle$Message createMessage(java.lang.CharSequence,long,java.lang.CharSequence)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean isReady(int)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.android.exoplayer2.metadata.id3.ChapterFrame: void writeToParcel(android.os.Parcel,int)
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.clearcut.zzey: void zzb(int,java.lang.Object)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: void getNextChunk(long,long,java.util.List,com.google.android.exoplayer2.source.chunk.ChunkHolder)
com.google.android.exoplayer2.decoder.SimpleDecoder: SimpleDecoder(com.google.android.exoplayer2.decoder.DecoderInputBuffer[],com.google.android.exoplayer2.decoder.DecoderOutputBuffer[])
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.google.android.gms.internal.vision.zzlx: int zzd()
com.google.android.gms.internal.measurement.zzje: java.lang.Object get(int)
androidx.webkit.internal.ApiHelperForM: void postWebMessage(android.webkit.WebView,android.webkit.WebMessage,android.net.Uri)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
androidx.appcompat.app.AlertController$AlertParams: void createListView(androidx.appcompat.app.AlertController)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
com.google.android.material.button.MaterialButton: int getIconSize()
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
com.google.android.exoplayer2.drm.DrmUtil$Api21: int mediaDrmStateExceptionToErrorCode(java.lang.Throwable)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
androidx.window.core.Bounds: int getHeight()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.google.android.gms.internal.clearcut.zzfw: boolean equals(java.lang.Object)
com.google.android.gms.internal.clearcut.zzey: int zzec()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.google.android.gms.internal.clearcut.zzey: int hashCode()
androidx.webkit.internal.ApiHelperForOMR1: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.util.TimedValueQueue: void clearBufferOnTimeDiscontinuity(long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
com.google.android.gms.internal.vision.zzko: java.lang.Object zzb(int)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
com.google.android.gms.internal.measurement.zzha: java.lang.String zza(android.content.ContentResolver,java.lang.String,java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
androidx.window.layout.WindowInfoTracker$-CC: void reset()
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void onDragEnd(boolean)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
com.google.android.gms.internal.clearcut.zzds: com.google.android.gms.internal.clearcut.zzck zzaf(int)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.SimpleArrayMap: void putAll(androidx.collection.SimpleArrayMap)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getEnterpriseAuthenticationAppLinkPolicyEnabled()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()
com.google.android.exoplayer2.ExoPlayerImpl: void setVideoOutputInternal(java.lang.Object)
com.google.android.exoplayer2.extractor.ogg.VorbisReader: int decodeBlockSize(byte,com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.vision.clearcut.DynamiteClearcutLogger: DynamiteClearcutLogger(android.content.Context)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$Api26: boolean doesDisplaySupportDolbyVision(android.content.Context)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput: int[] getWriteIndices()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidRawSoundResource(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.google.android.gms.internal.clearcut.zzge$zzv$zzb: com.google.android.gms.internal.clearcut.zzge$zzv$zzb[] values()
androidx.constraintlayout.solver.LinearSystem: int optimize(androidx.constraintlayout.solver.LinearSystem$Row,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.text.Spanned fromHtml(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.flags.impl.FlagProviderImpl: FlagProviderImpl()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.window.layout.WindowMetrics: int hashCode()
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] getBodyLocalizationArgs()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forScreeningCall(android.app.Person,android.app.PendingIntent,android.app.PendingIntent)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
com.google.android.exoplayer2.audio.DefaultAudioSink$Api31: void setLogSessionIdOnAudioTrack(android.media.AudioTrack,com.google.android.exoplayer2.analytics.PlayerId)
com.google.android.exoplayer2.upstream.DefaultAllocator: void release(com.google.android.exoplayer2.upstream.Allocator$AllocationNode)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.HashMap getMappedNotificationChannel(android.app.NotificationChannel)
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.constraintlayout.solver.widgets.Barrier: void markWidgets()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.google.android.gms.clearcut.zze: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.android.material.shape.ShapeAppearancePathProvider: void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long parseLong(java.lang.Object)
androidx.core.app.NotificationCompatBuilder: NotificationCompatBuilder(androidx.core.app.NotificationCompat$Builder)
androidx.window.R$id: R$id()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long getBufferedPositionUs()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration copyWithBufferSize(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.google.android.gms.internal.vision.zzml: com.google.android.gms.internal.vision.zzml[] values()
com.amolg.flutterbarcodescanner.camera.GraphicOverlay: GraphicOverlay(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
androidx.window.core.Version$Companion: Version$Companion()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int skipData(int,long)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: void updateManifest(com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] values()
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.core.app.ActivityCompat$Api32Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void onLoaderReleased()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList: java.lang.Object get(int)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDate(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
com.google.android.exoplayer2.source.hls.HlsChunkSource: void getNextChunk(long,long,java.util.List,boolean,com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsChunkHolder)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void resetSampleQueues()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.flags.ModuleDescriptor: ModuleDescriptor()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: boolean continueLoading(long)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: DateTimeComponents(java.lang.String,int)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime of(int,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: ScheduledNotificationBootReceiver()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
com.google.gson.stream.JsonReader: void push(int)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableCollection createValues()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.webkit.WebChromeClient getWebChromeClient()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftDownFrom(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.dexterous.flutterlocalnotifications.models.SoundSource: SoundSource(java.lang.String,int)
androidx.core.view.GravityCompat$Api17Impl: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData copyWithSchemeType(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: java.lang.String getAsString()
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createSlackVariable()
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
org.threeten.bp.chrono.ChronoLocalDateTimeImpl: java.lang.Object writeReplace()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: BigTextStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean)
com.google.android.exoplayer2.PlaylistTimeline: java.lang.Object getChildUidByChildIndex(int)
androidx.webkit.internal.ApiHelperForP: boolean isTracing(android.webkit.TracingController)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.google.android.exoplayer2.source.CompositeSequenceableLoader: boolean continueLoading(long)
kotlin.jvm.internal.FunctionReference: int hashCode()
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
com.google.android.material.chip.Chip: void setChipIconResource(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.window.embedding.SplitInfo: int hashCode()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.core.view.ViewCompat$Api18Impl: boolean isInLayout(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.amolg.flutterbarcodescanner.BarcodeCaptureActivity$USE_FLASH: com.amolg.flutterbarcodescanner.BarcodeCaptureActivity$USE_FLASH[] values()
com.google.android.exoplayer2.drm.DrmUtil$Api18: boolean isDeniedByServerException(java.lang.Throwable)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.google.android.gms.vision.barcode.Barcode: android.graphics.Rect getBoundingBox()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
androidx.collection.SparseArrayCompat: int indexOfValue(java.lang.Object)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.Feature[] getApiFeatures()
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf)
androidx.collection.ArraySet: int indexOfNull()
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser withOptional(boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
androidx.webkit.internal.ApiHelperForOMR1: void showInterstitial(android.webkit.SafeBrowsingResponse,boolean)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.chunk.Chunk maybeCreateEncryptionChunkFor(android.net.Uri,int)
androidx.window.core.Bounds: int getRight()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
org.threeten.bp.temporal.ChronoField: org.threeten.bp.temporal.ChronoField[] values()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
com.google.android.gms.vision.clearcut.DynamiteClearcutLogger: com.google.android.gms.vision.clearcut.VisionClearcutLogger zza(com.google.android.gms.vision.clearcut.DynamiteClearcutLogger)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser: org.threeten.bp.format.DateTimeFormatterBuilder$SettingsParser[] values()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
com.google.android.gms.vision.clearcut.DynamiteClearcutLogger: void zza(int,com.google.android.gms.internal.vision.zzfi$zzo)
androidx.cardview.widget.CardView: void setCardElevation(float)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
org.threeten.bp.Instant: java.lang.Object writeReplace()
com.google.android.material.shape.ShapeAppearancePathProvider: void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
com.google.android.exoplayer2.upstream.DefaultAllocator: void release(com.google.android.exoplayer2.upstream.Allocation)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean seekToUs(long,boolean)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotifications(android.content.Context,java.util.ArrayList)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void appendViewToAllSpans(android.view.View)
androidx.collection.ArraySet: java.lang.Object[] toArray()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.google.android.gms.internal.vision.zzlx: void zzb(com.google.android.gms.internal.vision.zzmr)
io.flutter.embedding.android.KeyboardManager: boolean handleEvent(android.view.KeyEvent)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.core.app.NotificationCompat$Style$Api16Impl: void setViewPadding(android.widget.RemoteViews,int,int,int,int,int)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
androidx.appcompat.app.AlertController$AlertParams: void apply(androidx.appcompat.app.AlertController)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
org.chromium.support_lib_boundary.WebAuthnCallbackBoundaryInterface: void onResult(int,android.content.Intent)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.android.gms.clearcut.zze: java.lang.String toString()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
androidx.core.app.NotificationCompat$CallStyle$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.core.content.FileProvider: FileProvider()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
org.threeten.bp.zone.Ser: java.lang.Object readResolve()
com.google.android.gms.measurement.internal.zzij: void zzX(java.lang.String,java.lang.String,java.lang.Object,boolean,long)
com.google.firebase.analytics.connector.internal.zzc: <clinit>()
com.google.android.exoplayer2.upstream.DefaultAllocator: com.google.android.exoplayer2.upstream.Allocation allocate()
com.google.android.gms.internal.clearcut.zzed: java.lang.reflect.Field zzdf()
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
com.google.android.gms.common.data.DataHolder: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.plugin.platform.PlatformViewsController: java.lang.Class[] access$300()
androidx.webkit.WebViewClientCompat: WebViewClientCompat()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
com.google.android.gms.common.data.DataHolder: void zad()
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
com.google.android.exoplayer2.MediaPeriodHolder: void associateNoSampleRenderersWithEmptySampleStream(com.google.android.exoplayer2.source.SampleStream[])
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.PlaybackInfo handlePositionDiscontinuity(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,long,long,boolean,int)
com.google.android.exoplayer2.decoder.SimpleDecoder: void setInitialInputBufferSize(int)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.PendingIntent getBroadcastPendingIntent(android.content.Context,int,android.content.Intent)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void maybeFinishPrepare()
org.threeten.bp.zone.ZoneOffsetTransitionRule: java.lang.Object writeReplace()
com.google.android.gms.internal.measurement.zznl: com.google.android.gms.internal.measurement.zznl zzd(com.google.android.gms.internal.measurement.zznl)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: DefaultStyleInformation(java.lang.Boolean,java.lang.Boolean)
com.google.android.material.button.MaterialButton: void setElevation(float)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $values()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.extractor.TrackOutput track(int,int)
androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.net.Uri retrieveSoundResourceUri(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.models.SoundSource)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setApi(io.flutter.plugins.webviewflutter.WebViewFlutterApiImpl)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent getLaunchIntent(android.content.Context)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: com.google.android.exoplayer2.source.chunk.ChunkSampleStream$EmbeddedSampleStream selectEmbeddedTrack(long,int)
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.exoplayer2.ExoPlayerImplInternal: void notifyTrackSelectionPlayWhenReadyChanged(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
org.threeten.bp.chrono.HijrahDate: int getCycleNumber(long)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: boolean equals(java.lang.Object)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.gms.vision.clearcut.LogUtils: com.google.android.gms.internal.vision.zzfi$zza zza(android.content.Context)
org.threeten.bp.MonthDay: java.lang.Object readResolve()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAlgorithmicDarkeningAllowed(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
com.google.android.gms.internal.vision.zzix: com.google.android.gms.internal.vision.zzix[] values()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.google.android.gms.internal.clearcut.zzey: boolean equals(java.lang.Object)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
androidx.window.core.Bounds: int getLeft()
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean sendNotificationPayloadMessage(android.content.Intent)
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.solver.widgets.ChainHead: boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int)
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String)
com.google.android.material.chip.Chip: float getCloseIconSize()
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
io.flutter.util.ViewUtils$$InternalSyntheticLambda$1$c0aa1774cd8831658692c914ac238b83368f5d4eb3adf605ed1d77e75423b804$0: boolean run(android.view.View)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek valueOf(java.lang.String)
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
androidx.core.os.LocaleListCompatWrapper: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzml: com.google.android.gms.internal.measurement.zzmt zzB(int)
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.trackselection.TrackSelectorResult selectTracks(float,com.google.android.exoplayer2.Timeline)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
com.google.android.gms.internal.clearcut.zzgy: int hashCode()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMediaStyle(androidx.core.app.NotificationCompat$Builder)
org.threeten.bp.chrono.HijrahDate: java.lang.Object readResolve()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void setDrmInitData(com.google.android.exoplayer2.drm.DrmInitData)
androidx.constraintlayout.widget.Barrier: int getType()
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.appcompat.widget.Toolbar: void setLogo(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long,boolean)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.google.android.gms.internal.measurement.zzhf: java.util.Map zzd()
com.google.android.exoplayer2.source.ads.AdPlaybackState: boolean equals(java.lang.Object)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: int getType()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void maybeThrowError(int)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.google.android.gms.measurement.internal.zzam: java.lang.String[] zzN()
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.window.R$styleable: R$styleable()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setLegacyStreamType(android.media.AudioAttributes$Builder,int)
com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation getDefaultStyleInformation(java.util.Map)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[])
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.google.android.gms.measurement.internal.zzlo: boolean zzan(java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigTextStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
androidx.core.util.Pools$SimplePool: boolean isInPool(java.lang.Object)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.Object writeReplace()
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: boolean haveReadFromMediaChunk(int)
org.threeten.bp.LocalDateTime: java.lang.Object writeReplace()
com.amolg.flutterbarcodescanner.camera.GraphicOverlay: float getHeightScaleFactor()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
com.google.android.exoplayer2.metadata.Metadata: void writeToParcel(android.os.Parcel,int)
org.threeten.bp.zone.StandardZoneRules: org.threeten.bp.ZoneOffset getOffset(org.threeten.bp.Instant)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: int getPrimaryStreamIndex(int,int[])
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
com.dexterous.flutterlocalnotifications.models.BitmapSource: BitmapSource(java.lang.String,int)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.window.layout.WindowLayoutInfo: int hashCode()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()
com.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
com.google.android.material.chip.Chip: float getTextStartPadding()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class access$100(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
org.threeten.bp.LocalTime: <clinit>()
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
com.google.android.material.chip.Chip: void setMaxWidth(int)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void onLoaderReleased()
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean drainToEndOfStream()
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
androidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.google.android.exoplayer2.MediaPeriodHolder: long applyTrackSelection(com.google.android.exoplayer2.trackselection.TrackSelectorResult,long,boolean,boolean[])
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setUsage(android.media.AudioAttributes$Builder,int)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.core.app.NotificationCompat$MessagingStyle$Api16Impl: android.app.Notification$BigTextStyle setBigContentTitle(android.app.Notification$BigTextStyle,java.lang.CharSequence)
org.threeten.bp.LocalDateTime: java.lang.Object readResolve()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForP: android.webkit.TracingController getTracingControllerInstance()
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: long resolveTimeToLiveEdgeUs(long)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
org.threeten.bp.chrono.HijrahDate: <clinit>()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata$Entry get(int)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData$SchemeData get(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: void seekToUs(long)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
com.google.gson.internal.bind.JsonTreeReader: void push(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setProgress(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: void setRadius(float)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
androidx.constraintlayout.solver.widgets.analyzer.HelperReferences: void apply()
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeStartDeferredRetry(int)
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
com.google.android.gms.internal.measurement.zzmr: void add(int,java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateAllRemainingSpans(int,int)
com.google.gson.stream.JsonReader: void skipValue()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap buildOrThrow()
androidx.window.core.Bounds: int getBottom()
com.google.android.exoplayer2.audio.AudioAttributes$Api32: void setSpatializationBehavior(android.media.AudioAttributes$Builder,int)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails fromNotificationDetails(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource valueOf(java.lang.String)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
androidx.appcompat.view.SupportMenuInflater: <clinit>()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: float getIconEndPadding()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
androidx.collection.ArraySet: java.lang.Object valueAt(int)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
androidx.webkit.internal.ApiHelperForP: android.os.Looper getWebViewLooper(android.webkit.WebView)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
com.google.firebase.iid.Registrar: com.google.firebase.iid.internal.FirebaseInstanceIdInternal lambda$getComponents$1$Registrar(com.google.firebase.components.ComponentContainer)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.material.chip.Chip: void setCheckableResource(int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.recyclerview.widget.GridLayoutManager: void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.google.android.gms.internal.measurement.zzjf: com.google.android.gms.internal.measurement.zzja zzh()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.google.android.gms.internal.clearcut.zzha: int zzen()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
org.threeten.bp.Duration: java.lang.Object readResolve()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.google.firebase.messaging.RemoteMessage$Notification: java.lang.String[] getTitleLocalizationArgs()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
org.threeten.bp.chrono.IsoEra: org.threeten.bp.chrono.IsoEra valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.exoplayer2.source.dash.DashMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.google.android.gms.internal.vision.zzfi$zzg$zzc: com.google.android.gms.internal.vision.zzfi$zzg$zzc[] values()
org.threeten.bp.chrono.ChronoZonedDateTimeImpl: java.lang.Object readResolve()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.constraintlayout.solver.PriorityGoalRow: void addToGoal(androidx.constraintlayout.solver.SolverVariable)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
com.google.android.gms.measurement.internal.zzam: java.lang.String[] zzM()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.core.app.NotificationCompat$MessagingStyle$Api16Impl: void setBuilder(android.app.Notification$Style,android.app.Notification$Builder)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.clearcut.zzy: java.lang.String zza(android.content.ContentResolver,java.lang.String,java.lang.String)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: com.google.android.exoplayer2.Format[] access$300(com.google.android.exoplayer2.source.chunk.ChunkSampleStream)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
com.google.android.exoplayer2.drm.DrmInitData: void writeToParcel(android.os.Parcel,int)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
com.google.android.gms.internal.vision.zzlb: boolean add(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)
com.google.android.gms.internal.clearcut.zzfw: java.lang.Object clone()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
com.google.android.gms.common.api.internal.TaskApiCall: com.google.android.gms.common.Feature[] zab()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
com.google.android.gms.vision.clearcut.LoggingConnectionCallbacks: void onConnected(android.os.Bundle)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroup(android.app.NotificationManager,android.app.NotificationChannelGroup)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.collection.ArraySet: ArraySet(int)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: int hashCode()
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.internal.zzel: com.google.android.gms.measurement.internal.zzq zzj(java.lang.String)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
org.threeten.bp.chrono.HijrahDate: int getYearLength(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.cardview.widget.CardView: float getRadius()
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
com.google.android.gms.internal.measurement.zzbl: com.google.android.gms.internal.measurement.zzbl[] values()
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] values()
com.google.android.gms.internal.vision.zzlx: void zza(java.lang.StringBuilder,int)
org.threeten.bp.zone.TzdbZoneRulesProvider$Version: org.threeten.bp.zone.ZoneRules getRules(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: byte[] getAsArrayBuffer()
androidx.constraintlayout.solver.SolverVariableValues: float use(androidx.constraintlayout.solver.ArrayRow,boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.google.android.gms.internal.measurement.zznl: int zzb()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] $values()
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.google.android.exoplayer2.upstream.DefaultAllocator: DefaultAllocator(boolean,int,int)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getRemoteInputs()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer getOutputBuffer(int)
org.threeten.bp.MonthDay: java.lang.Object writeReplace()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.extractor.TrackOutput prepareTrackOutput(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$TrackId)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)
dev.fluttercommunity.plus.share.SharePlusPendingIntent: SharePlusPendingIntent()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.constraintlayout.solver.LinearSystem: void addRow(androidx.constraintlayout.solver.ArrayRow)
com.google.common.collect.RegularImmutableList: java.lang.Object get(int)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.google.android.exoplayer2.source.chunk.BundledChunkExtractor: com.google.android.exoplayer2.extractor.TrackOutput track(int,int)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo$Api29: int areResolutionAndFrameRateCovered(android.media.MediaCodecInfo$VideoCapabilities,int,int,double)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface: void remove()
kotlinx.coroutines.internal.ThreadState: void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf)
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime of(int,int,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.NotificationCompat$MessagingStyle$Api16Impl: android.app.Notification$BigTextStyle createBigTextStyle(android.app.Notification$Builder)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.android.gms.internal.vision.zzlx: void zza(com.google.android.gms.internal.vision.zzmr)
com.google.android.exoplayer2.util.TimedValueQueue: java.lang.Object popFirst()
org.threeten.bp.zone.StandardZoneRules: boolean equals(java.lang.Object)
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void outputPendingMetadataSamples(long)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object removeFirstOrNull()
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] values()
com.google.android.exoplayer2.trackselection.BaseTrackSelection: com.google.android.exoplayer2.Format getFormat(int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
org.threeten.bp.Month: org.threeten.bp.Month plus(long)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: int parse(org.threeten.bp.format.DateTimeParseContext,java.lang.CharSequence,int)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.google.android.gms.common.internal.service.zap: com.google.android.gms.common.Feature[] getApiFeatures()
com.google.android.exoplayer2.source.CompositeSequenceableLoader: void reevaluateBuffer(long)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.webkit.internal.ApiHelperForO: void setSafeBrowsingEnabled(android.webkit.WebSettings,boolean)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebChromeClient(android.webkit.WebChromeClient)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: void release(com.google.android.exoplayer2.source.chunk.ChunkSampleStream$ReleaseCallback)
org.threeten.bp.format.ResolverStyle: org.threeten.bp.format.ResolverStyle[] values()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.android.gms.internal.clearcut.zzgy: int zzen()
com.google.android.exoplayer2.source.dash.DashMediaPeriod: void release()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
androidx.collection.SparseArrayCompat: void clear()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotifications(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
com.google.android.exoplayer2.ExoPlayerImplInternal: long getMaxRendererReadPositionUs()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
androidx.appcompat.widget.Toolbar: void setTitle(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.google.android.gms.internal.measurement.zziw: java.lang.Object[] toArray()
androidx.window.core.Version: java.lang.String getDescription()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int readSample(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void reset()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.google.android.gms.clearcut.zze: int hashCode()
androidx.window.embedding.SplitPairRule: boolean getClearTop()
org.threeten.bp.ZonedDateTime: java.lang.Object readResolve()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata copyWithAppendedEntriesFrom(com.google.android.exoplayer2.metadata.Metadata)
androidx.window.core.Bounds: int hashCode()
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeUpdateLoadingPeriod()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.window.core.Bounds: android.graphics.Rect toRect()
androidx.appcompat.widget.SearchView: int getInputType()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String getType(android.net.Uri)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
com.google.android.exoplayer2.extractor.jpeg.XmpMotionPhotoDescriptionParser: com.google.common.collect.ImmutableList parseMicroVideoOffsetFromDescription(org.xmlpull.v1.XmlPullParser)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
org.threeten.bp.zone.StandardZoneRules: int hashCode()
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
com.google.android.gms.internal.clearcut.zzey: com.google.android.gms.internal.clearcut.zzey zza(com.google.android.gms.internal.clearcut.zzey,com.google.android.gms.internal.clearcut.zzey)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.google.android.gms.internal.measurement.zzms: java.lang.Object[] zze()
androidx.constraintlayout.solver.SolverVariable: void setFinalValue(androidx.constraintlayout.solver.LinearSystem,float)
com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setDeclineButtonColorHint(android.app.Notification$CallStyle,int)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
androidx.webkit.WebViewClientCompat: java.lang.String[] getSupportedFeatures()
com.google.android.exoplayer2.ExoPlayerImplInternal: long seekToPeriodPosition(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,boolean,boolean)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle setSummaryText(android.app.Notification$BigTextStyle,java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void stopForegroundService(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,boolean,boolean,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,boolean,boolean,int,int,int,int,float,boolean)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzlz: boolean zzc(java.lang.Class)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.common.collect.RegularImmutableSet: java.lang.Object[] internalArray()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.material.timepicker.ClockFaceView: void updateTextViews(int)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
com.google.android.gms.clearcut.zze: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.extractor.mp4.Track parseTrak(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom,com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom,long,com.google.android.exoplayer2.drm.DrmInitData,boolean,boolean)
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: android.app.Notification$Action$Builder createActionBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
androidx.webkit.internal.ApiHelperForM: java.lang.CharSequence getDescription(android.webkit.WebResourceError)
com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.zzj zza(android.content.pm.PackageInfo,com.google.android.gms.common.zzj[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.collection.LongSparseArray: void remove(long)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.constraintlayout.solver.widgets.Optimizer: void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
androidx.collection.LongSparseArray: void put(long,java.lang.Object)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder updateSelectedBaseUrl(int)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createExtraVariable()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
androidx.window.layout.SidecarAdapter: SidecarAdapter()
com.google.android.exoplayer2.audio.DefaultAudioSink: void setupAudioProcessors()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource valueOf(java.lang.String)
com.google.android.exoplayer2.source.TrackGroup: com.google.android.exoplayer2.Format getFormat(int)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.amolg.flutterbarcodescanner.BarcodeCaptureActivity: BarcodeCaptureActivity()
com.google.android.gms.vision.barcode.Barcode: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.MediaPeriodHolder: long applyTrackSelection(com.google.android.exoplayer2.trackselection.TrackSelectorResult,long,boolean)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int getDrawableResourceId(android.content.Context,java.lang.String)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void maybeThrowPrepareError()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
androidx.window.embedding.ActivityFilter: int hashCode()
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
kotlin.jvm.internal.CallableReference: boolean isFinal()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.android.gms.internal.measurement.zzmr: java.lang.Object remove(int)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
org.threeten.bp.zone.StandardZoneRules: java.lang.Object getOffsetInfo(org.threeten.bp.LocalDateTime)
com.google.android.gms.measurement.internal.zzam: java.lang.String[] zzQ()
com.google.android.gms.internal.measurement.zzjf: int zza(java.lang.Object[],int)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] getAdjustedMonthLength(int)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: void setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
com.google.gson.stream.JsonReader: void endObject()
com.google.android.material.chip.Chip: void setLines(int)
com.google.android.exoplayer2.text.ttml.TtmlNode: void applyStyleToOutput(java.util.Map,com.google.android.exoplayer2.text.Cue$Builder,int,int,int)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompat$InboxStyle$Api16Impl: android.app.Notification$InboxStyle addLine(android.app.Notification$InboxStyle,java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
org.threeten.bp.chrono.Chronology: java.lang.Object readResolve()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void release()
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.google.android.material.chip.Chip: void setChipIconVisible(int)
androidx.constraintlayout.solver.SolverVariable: void addToRow(androidx.constraintlayout.solver.ArrayRow)
com.google.android.exoplayer2.ExoPlayerImpl: void sendRendererMessage(int,int,java.lang.Object)
androidx.transition.Visibility: java.lang.String[] getTransitionProperties()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
com.dexterous.flutterlocalnotifications.models.PersonDetails: PersonDetails(java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: boolean basicMeasureWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)
androidx.appcompat.view.SupportMenuInflater$MenuState: void readItem(android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipIconSize(float)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLargeIconInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedSchedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.vision.zziv: com.google.android.gms.internal.vision.zziv[] values()
com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableSet createEntrySet()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.android.exoplayer2.audio.DefaultAudioSink: void reset()
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: DefaultSsChunkSource(com.google.android.exoplayer2.upstream.LoaderErrorThrower,com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest,int,com.google.android.exoplayer2.trackselection.ExoTrackSelection,com.google.android.exoplayer2.upstream.DataSource)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.net.Uri cache(byte[],java.lang.String,java.lang.String)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setIsVideo(android.app.Notification$CallStyle,boolean)
com.google.android.gms.measurement.internal.zzij: void zzI(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.core.os.TraceCompat$Api18Impl: void endSection()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: long seekToUs(long)
androidx.core.os.LocaleListCompatWrapper: java.lang.String toString()
androidx.window.layout.WindowMetrics: java.lang.String toString()
com.google.android.gms.internal.vision.zzlx: int zze()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
com.google.android.exoplayer2.text.cea.Cea708Decoder: void flush()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
org.threeten.bp.chrono.ThaiBuddhistEra: java.lang.Object writeReplace()
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
org.threeten.bp.OffsetTime: java.lang.Object readResolve()
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: com.google.android.exoplayer2.video.VideoFrameMetadataListener getVideoFrameMetadataListener()
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action$Builder createActionBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
com.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.webkit.internal.ApiHelperForM: void postVisualStateCallback(android.webkit.WebView,long,androidx.webkit.WebViewCompat$VisualStateCallback)
com.google.android.gms.vision.clearcut.VisionClearcutLogger: VisionClearcutLogger(android.content.Context)
com.google.android.gms.internal.vision.zzfi$zzg$zzb: com.google.android.gms.internal.vision.zzfi$zzg$zzb[] values()
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.constraintlayout.solver.SolverVariable: void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.source.dash.EventSampleStream: int readData(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,int)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: int getCodecCount()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.google.android.gms.internal.measurement.zzje: java.lang.Object[] zze()
org.threeten.bp.OffsetDateTime: java.lang.Object readResolve()
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setSubText(android.app.Notification$Builder,java.lang.CharSequence)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
org.threeten.bp.chrono.MinguoDate: java.lang.Object writeReplace()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readColor(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.android.gms.internal.clearcut.zzhb: com.google.android.gms.internal.clearcut.zzhb[] zzge()
androidx.cardview.widget.CardView: void setRadius(float)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.google.android.material.internal.FlowLayout: FlowLayout(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Notification createNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long,int)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeThrowError(int)
androidx.window.embedding.SplitRule: SplitRule()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: android.app.Notification$MessagingStyle$Message setData(android.app.Notification$MessagingStyle$Message,java.lang.String,android.net.Uri)
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.google.android.gms.flags.impl.FlagProviderImpl: void init(com.google.android.gms.dynamic.IObjectWrapper)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.window.embedding.ActivityStack: int hashCode()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMessagingStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] values()
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.core.view.ViewCompat$Api18Impl: void setClipBounds(android.view.View,android.graphics.Rect)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.chunk.MediaChunkIterator[] createMediaChunkIterators(com.google.android.exoplayer2.source.hls.HlsMediaChunk,long)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.window.core.Bounds: int getWidth()
com.google.android.gms.common.internal.zzm: java.lang.Object createFromParcel(android.os.Parcel)
androidx.lifecycle.ViewModel: ViewModel()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.google.firebase.installations.local.IidStore: java.lang.String readToken()
com.amolg.flutterbarcodescanner.camera.GraphicOverlay: java.util.List getGraphics()
com.google.android.gms.common.api.PendingResult: PendingResult()
androidx.core.app.NotificationCompatBuilder$Api19Impl: android.app.Notification$Builder setExtras(android.app.Notification$Builder,android.os.Bundle)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.collection.SimpleArrayMap: int hashCode()
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
com.google.android.gms.internal.clearcut.zzgy: boolean equals(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata copyWithPresentationTimeUs(long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
com.dexterous.flutterlocalnotifications.models.Time: com.dexterous.flutterlocalnotifications.models.Time from(java.util.Map)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$Api23: void setAudioSinkPreferredDevice(com.google.android.exoplayer2.audio.AudioSink,java.lang.Object)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: android.app.Notification$MessagingStyle setGroupConversation(android.app.Notification$MessagingStyle,boolean)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.google.android.material.chip.Chip: void setGravity(int)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean onWebAuthnIntent(android.webkit.WebView,android.app.PendingIntent,java.lang.reflect.InvocationHandler)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVisibility(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.window.layout.FoldingFeature: boolean isSeparating()
org.threeten.bp.ZoneRegion: java.lang.Object readResolve()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.google.android.gms.internal.measurement.zzkt: com.google.android.gms.internal.measurement.zzkt[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onNewIntent(android.content.Intent)
com.google.common.collect.RegularImmutableList: java.lang.Object[] internalArray()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.ParcelFileDescriptor openFile(android.content.ContentProvider,android.net.Uri)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVibrationPattern(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.SupportMenuInflater: SupportMenuInflater(android.content.Context)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.core.app.NotificationCompat$InboxStyle$Api16Impl: android.app.Notification$InboxStyle setBigContentTitle(android.app.Notification$InboxStyle,java.lang.CharSequence)
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
com.google.android.exoplayer2.drm.DrmInitData: boolean equals(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle$Api15Impl: void setContentDescription(android.widget.RemoteViews,int,java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: void ensureMediaCodecInfosInitialized()
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.amolg.flutterbarcodescanner.camera.GraphicOverlay: float getWidthScaleFactor()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void layout()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.appcompat.widget.SearchView: int getImeOptions()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
androidx.webkit.internal.ApiHelperForP: void start(android.webkit.TracingController,androidx.webkit.TracingConfig)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebViewClient(android.webkit.WebViewClient)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.android.material.button.MaterialButton: void setIconResource(int)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
com.google.android.exoplayer2.drm.DrmUtil$Api18: boolean isNotProvisionedException(java.lang.Throwable)
androidx.constraintlayout.solver.SolverVariable: void removeFromRow(androidx.constraintlayout.solver.ArrayRow)
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs()
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setFrame(int,int,int,int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.android.gms.internal.clearcut.zzgy: com.google.android.gms.internal.clearcut.zzgy zzgb()
com.google.android.gms.internal.clearcut.zzcd: com.google.android.gms.internal.clearcut.zzcd[] values()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
kotlinx.coroutines.internal.ThreadSafeHeap: void swap(int,int)
com.google.android.exoplayer2.util.TimedValueQueue: void addUnchecked(long,java.lang.Object)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.google.android.gms.measurement.internal.zzam: java.lang.String[] zzR()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void prependViewToAllSpans(android.view.View)
org.threeten.bp.chrono.MinguoEra: java.lang.Object writeReplace()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebAuthnSupport(int)
com.google.android.exoplayer2.text.ttml.TtmlNode: java.lang.String[] getStyleIds()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.google.android.exoplayer2.audio.DefaultAudioSink: void flushAudioProcessors()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
androidx.window.core.Version: int getMajor()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
androidx.constraintlayout.solver.ArrayRow: void updateFromSystem(androidx.constraintlayout.solver.LinearSystem)
com.google.android.gms.internal.vision.zzlx: void zza(int,java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateRepeatIntervalMilliseconds(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenHorizontal(int)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForO: boolean getSafeBrowsingEnabled(android.webkit.WebSettings)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData createSessionCreationData(com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.drm.DrmInitData)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper[] access$200(com.google.android.exoplayer2.source.hls.HlsMediaPeriod)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
com.google.android.gms.vision.clearcut.LoggingConnectionCallbacks: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
io.flutter.plugins.firebase.messaging.JobIntentService: JobIntentService()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.collection.SimpleArrayMap: void allocArrays(int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.AlarmManager getAlarmManager(android.content.Context)
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
androidx.constraintlayout.solver.widgets.Guideline: Guideline()
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.metadata.Metadata: int length()
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] $values()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void schedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.graphics.Bitmap getBitmapFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.google.android.material.card.MaterialCardView: void setProgress(float)
androidx.core.app.NotificationManagerCompat$Api26Impl: android.app.NotificationChannel getNotificationChannel(android.app.NotificationManager,java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.net.Uri buildRawResourceUri(int)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: SupportMenuInflater$InflatedOnMenuItemClickListener(java.lang.Object,java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long getLargestQueuedTimestampUs(boolean)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String access$000(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
com.google.android.exoplayer2.source.TrackGroup: int hashCode()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean configureRetry(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable,int)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.core.app.ComponentActivity: ComponentActivity()
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void discardBuffer(long,boolean)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
com.google.android.gms.common.internal.zzj: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
com.dexterous.flutterlocalnotifications.RepeatInterval: RepeatInterval(java.lang.String,int)
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
com.google.android.exoplayer2.source.CompositeSequenceableLoader: long getBufferedPositionUs()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
org.threeten.bp.zone.StandardZoneRules: org.threeten.bp.zone.ZoneOffsetTransition[] findTransitionArray(int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.models.NotificationDetails extractNotificationDetails(io.flutter.plugin.common.MethodChannel$Result,java.util.Map)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.google.android.exoplayer2.video.spherical.SphericalGLSurfaceView: void setDefaultStereoMode(int)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.Feature[] getAvailableFeatures()
androidx.constraintlayout.solver.widgets.Chain: void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
kotlin.jvm.internal.CallableReference: java.lang.String getName()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivity()
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)
androidx.constraintlayout.solver.SolverVariable: void reset()
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.constraintlayout.solver.LinearSystem: void increaseTableSize()
org.threeten.bp.Month: org.threeten.bp.Month[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.material.button.MaterialButtonToggleGroup: int getChildDrawingOrder(int,int)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.window.core.Version: java.lang.String toString()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.google.android.gms.internal.clearcut.zzha: void zza(com.google.android.gms.internal.clearcut.zzfs)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
kotlin.jvm.internal.Lambda: Lambda(int)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
com.google.android.gms.internal.vision.zzfi$zzj$zza: com.google.android.gms.internal.vision.zzfi$zzj$zza[] values()
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] $values()
androidx.collection.LongSparseArray: void gc()
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle[] values()
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSound(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean isAlgorithmicDarkeningAllowed()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.google.android.exoplayer2.text.cea.Cea708Decoder: Cea708Decoder(int,java.util.List)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
com.google.android.gms.internal.measurement.zzlz: com.google.android.gms.internal.measurement.zzmf zzb(java.lang.Class)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
com.google.android.material.card.MaterialCardView: float getProgress()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: SsMediaPeriod(com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest,com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource$Factory,com.google.android.exoplayer2.upstream.TransferListener,com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.drm.DrmSessionEventListener$EventDispatcher,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher,com.google.android.exoplayer2.upstream.LoaderErrorThrower,com.google.android.exoplayer2.upstream.Allocator)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
kotlin.jvm.internal.FunctionReference: int getArity()
com.amolg.flutterbarcodescanner.camera.CameraSourcePreview: CameraSourcePreview(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle createBigPictureStyle(android.app.Notification$Builder)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
androidx.window.R: R()
com.google.android.gms.flags.impl.FlagProviderImpl: java.lang.String getStringFlagValue(java.lang.String,java.lang.String,int)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.extractor.TrackOutput getMappedTrackOutput(int,int)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setPriority(android.app.Notification$Builder,int)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.constraintlayout.solver.widgets.HelperWidget: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean areAllStartsEqual()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
com.google.common.collect.RegularImmutableSet: int copyIntoArray(java.lang.Object[],int)
androidx.webkit.internal.ApiHelperForP: boolean stop(android.webkit.TracingController,java.io.OutputStream,java.util.concurrent.Executor)
com.google.android.exoplayer2.source.chunk.BundledChunkExtractor: com.google.android.exoplayer2.Format[] getSampleFormats()
com.google.android.material.button.MaterialButtonToggleGroup: java.lang.CharSequence getAccessibilityClassName()
com.google.android.exoplayer2.metadata.Metadata: java.lang.String toString()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean hasReadingPeriodFinishedReading()
com.google.android.gms.internal.clearcut.zzed: java.lang.reflect.Field zzdc()
com.google.android.exoplayer2.extractor.jpeg.XmpMotionPhotoDescriptionParser: boolean parseMotionPhotoFlagFromDescription(org.xmlpull.v1.XmlPullParser)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void startForegroundService(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationCompat$MessagingStyle$Message createMessage(android.content.Context,com.dexterous.flutterlocalnotifications.models.MessageDetails)
com.google.gson.internal.bind.JsonTreeReader: void skipValue()
com.google.android.gms.internal.clearcut.zzfw: int hashCode()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
org.threeten.bp.chrono.ThaiBuddhistChronology: java.lang.Object readResolve()
com.google.android.gms.internal.vision.zzha: com.google.android.gms.internal.vision.zzha[] values()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest copy(java.util.List)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.gms.vision.clearcut.LogUtils: LogUtils()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelAllNotifications(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle$Api16Impl: android.app.Notification$Builder setStyle(android.app.Notification$Builder,java.lang.Object)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails readPersonDetails(java.util.Map)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void toPath(android.graphics.Path)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
androidx.constraintlayout.widget.Barrier: void setMargin(int)
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface: java.util.List getCookieInfo(java.lang.String)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.google.android.gms.measurement.internal.zzlo: boolean zzah(android.content.Context,java.lang.String)
com.google.android.gms.internal.vision.zzko: com.google.android.gms.internal.vision.zzjg zzc(int)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isChainHead(int)
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: MessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean,java.lang.Boolean)
androidx.webkit.internal.IncompatibleApkWebViewProviderFactory: java.lang.String[] getWebViewFeatures()
com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter: java.nio.ByteBuffer getInputBuffer(int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: long getBufferedPositionUs()
com.google.android.gms.internal.clearcut.zzge$zzs$zzb: com.google.android.gms.internal.clearcut.zzge$zzs$zzb[] values()
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
androidx.window.embedding.ActivityRule: int hashCode()
androidx.core.app.NotificationCompat$CallStyle$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
com.google.android.material.shape.ShapeAppearancePathProvider: float getEdgeCenterForIndex(android.graphics.RectF,int)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.google.android.exoplayer2.upstream.DefaultAllocator: void trim()
com.google.android.gms.internal.vision.zzkd: boolean zza(java.lang.Class)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
com.google.android.exoplayer2.extractor.mp4.AtomParsers: void parseAudioSampleEntry(com.google.android.exoplayer2.util.ParsableByteArray,int,int,int,int,java.lang.String,boolean,com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData,int)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
androidx.collection.SimpleArrayMap: int indexOfNull()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
com.google.android.material.button.MaterialButton: int getTextWidth()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.Person buildPerson(android.content.Context,com.dexterous.flutterlocalnotifications.models.PersonDetails)
org.threeten.bp.chrono.HijrahDate: java.lang.Integer[] getAdjustedMonthDays(int)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
com.google.android.material.chip.Chip: float getChipEndPadding()
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: ChunkSampleStream(int,int[],com.google.android.exoplayer2.Format[],com.google.android.exoplayer2.source.chunk.ChunkSource,com.google.android.exoplayer2.source.SequenceableLoader$Callback,com.google.android.exoplayer2.upstream.Allocator,long,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.drm.DrmSessionEventListener$EventDispatcher,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher)
androidx.constraintlayout.solver.Pools$SimplePool: java.lang.Object acquire()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.view.View getView()
com.google.android.gms.internal.measurement.zzcb: zzcb()
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State[] values()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek[] values()
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler getMessagePayload()
androidx.core.app.NotificationCompat$InboxStyle$Api16Impl: android.app.Notification$InboxStyle setSummaryText(android.app.Notification$InboxStyle,java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.gms.measurement.internal.zzlo: int zza(java.lang.String,java.lang.String,java.lang.String,java.lang.Object,android.os.Bundle,java.util.List,boolean,boolean)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.metadata.id3.TextInformationFrame parseStandardGenreAttribute(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenVertical(int)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource: void processManifest()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus[] values()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.google.android.exoplayer2.util.TimedValueQueue: void doubleCapacityIfFull()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
androidx.cardview.widget.CardView: void setMinimumHeight(int)
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.common.internal.BaseGmsClient: void getRemoteService(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set)
com.google.android.gms.vision.internal.Flags: Flags()
com.google.android.gms.measurement.internal.zzam: java.lang.String[] zzO()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.google.android.gms.internal.vision.zzlx: int hashCode()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.constraintlayout.solver.widgets.HelperWidget: void removeAllIds()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
io.flutter.plugins.webviewflutter.JavaScriptChannel: void postMessage(java.lang.String)
com.google.android.exoplayer2.trackselection.TrackSelectorResult: boolean isEquivalent(com.google.android.exoplayer2.trackselection.TrackSelectorResult)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
androidx.window.embedding.SplitRule: int getLayoutDirection()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateFromRuns(boolean,boolean)
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle addMessage(android.app.Notification$MessagingStyle,android.app.Notification$MessagingStyle$Message)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean canDiscardUpstreamMediaChunksFromIndex(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMaxStart(int)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.google.android.material.timepicker.ClockFaceView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: void resetSampleQueues()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSmallIcon(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
com.google.android.gms.internal.measurement.zzoa: com.google.android.gms.internal.measurement.zzoa[] values()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput: void setSampleOffsetUs(long)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: com.google.android.exoplayer2.source.TrackGroupArray buildTrackGroups(com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest,com.google.android.exoplayer2.drm.DrmSessionManager)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.appcompat.view.SupportMenuInflater$MenuState: void setItem(android.view.MenuItem)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForM: void close(android.webkit.WebMessagePort)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: void selectNewStreams(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long,int[])
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.constraintlayout.solver.widgets.ChainHead: void defineChainProperties()
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.google.android.exoplayer2.source.ClippingMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.ExoTrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.constraintlayout.widget.Barrier: int getMargin()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: com.google.android.exoplayer2.audio.AudioProcessor[] getAudioProcessors()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf)
androidx.webkit.internal.ApiHelperForM: android.webkit.WebMessage createWebMessage(androidx.webkit.WebMessageCompat)
androidx.window.embedding.SplitController: boolean isSplitSupported()
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.google.android.gms.internal.vision.zziv: <clinit>()
androidx.core.app.NotificationCompat$InboxStyle$Api16Impl: android.app.Notification$InboxStyle createInboxStyle(android.app.Notification$Builder)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.core.view.accessibility.AccessibilityEventCompat$Api19Impl: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.google.android.gms.internal.vision.zzkd: com.google.android.gms.internal.vision.zzki zzb(java.lang.Class)
com.google.android.material.shape.ShapeAppearancePathProvider: void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
com.google.android.gms.internal.measurement.zzkt: <clinit>()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
com.google.android.material.internal.FlowLayout: int getRowCount()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean isValidDrawableResource(android.content.Context,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.google.android.gms.internal.clearcut.zzha: boolean equals(java.lang.Object)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.core.app.BundleCompat$Api18Impl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.dexterous.flutterlocalnotifications.models.MessageDetails: MessageDetails(java.lang.String,java.lang.Long,com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.String)
com.google.android.gms.vision.barcode.Barcode$Address: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
org.threeten.bp.LocalTime: java.lang.Object writeReplace()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.collection.ArraySet: void ensureCapacity(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setSpanCount(int)
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.google.android.gms.internal.clearcut.zzds: java.lang.Object zzae(int)
com.google.android.exoplayer2.source.ads.AdPlaybackState: com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup getAdGroup(int)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
com.google.android.exoplayer2.source.ads.AdPlaybackState: java.lang.String toString()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: void discardBuffer(long,boolean)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency valueOf(java.lang.String)
com.google.android.gms.measurement.internal.zzlo: void zzM(android.os.Parcelable[],int,boolean)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification build(android.app.Notification$Builder)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
androidx.window.core.Version: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.google.android.gms.internal.vision.zzjm: com.google.android.gms.internal.vision.zzjm[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: void writeToParcel(android.os.Parcel,int)
kotlin.jvm.internal.CallableReference: CallableReference()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannel)
androidx.core.app.ActivityCompat$1: void run()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
org.threeten.bp.DayOfWeek: org.threeten.bp.DayOfWeek of(int)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: com.google.android.exoplayer2.source.chunk.ChunkSampleStream buildSampleStream(com.google.android.exoplayer2.trackselection.ExoTrackSelection,long)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void initMediaChunkLoad(com.google.android.exoplayer2.source.hls.HlsMediaChunk)
org.threeten.bp.chrono.HijrahEra: org.threeten.bp.chrono.HijrahEra valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
org.threeten.bp.OffsetDateTime: java.lang.Object writeReplace()
com.google.android.gms.measurement.internal.zzlo: void zzX(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean)
com.google.android.gms.internal.measurement.zzmr: com.google.android.gms.internal.measurement.zzli zzd(int)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle bigPicture(android.app.Notification$BigPictureStyle,android.graphics.Bitmap)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.webkit.internal.ApiHelperForO: android.webkit.WebChromeClient getWebChromeClient(android.webkit.WebView)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: void release()
androidx.webkit.internal.ApiHelperForOMR1: void backToSafety(android.webkit.SafeBrowsingResponse,boolean)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.google.android.material.internal.BaselineLayout: int getBaseline()
kotlin.jvm.internal.CallableReference: boolean isOpen()
com.google.android.exoplayer2.metadata.id3.ChapterFrame: ChapterFrame(android.os.Parcel)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.collection.LongSparseArray: void append(long,java.lang.Object)
com.google.android.exoplayer2.upstream.FileDataSource$Api21: boolean isPermissionError(java.lang.Throwable)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setTimeoutAfter(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder: void getReadyToExpandTo(int)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
com.google.android.gms.internal.vision.zzmo: com.google.android.gms.internal.vision.zzmo[] values()
io.flutter.embedding.android.KeyEmbedderResponder: boolean handleEventImpl(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
com.google.android.exoplayer2.drm.DrmInitData: int hashCode()
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents valueOf(java.lang.String)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: void onChunkLoadCompleted(com.google.android.exoplayer2.source.chunk.Chunk)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: BigPictureStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Boolean)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
com.google.android.exoplayer2.video.VideoFrameReleaseHelper$Api30: void setSurfaceFrameRate(android.view.Surface,float)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readProgressInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readChannelInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleDefineWindow(int)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.collection.ArraySet$1: java.lang.Object colGetEntry(int,int)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
com.google.android.exoplayer2.audio.DefaultAudioSink: void processBuffers(long)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int skipData(int,long)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
org.threeten.bp.Month: org.threeten.bp.Month valueOf(java.lang.String)
com.google.android.exoplayer2.trackselection.TrackSelectorResult: boolean isRendererEnabled(int)
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean launchedActivityFromHistory(android.content.Intent)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
com.google.android.gms.internal.vision.zzlb: java.lang.Object remove(int)
androidx.constraintlayout.solver.PriorityGoalRow: java.lang.String toString()
com.google.android.gms.internal.vision.zzlb: java.lang.Object set(int,java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMinStart(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.window.core.Bounds: int getTop()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelNotification(java.lang.Integer,java.lang.String)
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeatNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setUsesChronometer(android.app.Notification$Builder,boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readMessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
androidx.core.app.NotificationCompat$Style$Api16Impl: void setTextViewTextSize(android.widget.RemoteViews,int,int,float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setLights(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void rescheduleNotifications(android.content.Context)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
org.threeten.bp.Duration: java.lang.Object writeReplace()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void processMoovAtom(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannelGroup)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
org.threeten.bp.LocalTime: java.lang.Object readResolve()
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForM: void postMessage(android.webkit.WebMessagePort,android.webkit.WebMessage)
com.google.android.gms.vision.clearcut.LogUtils: com.google.android.gms.internal.vision.zzfi$zzo zza(long,int,java.lang.String,java.lang.String,java.util.List,com.google.android.gms.internal.vision.zzs)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.android.gms.measurement.internal.zzai: com.google.android.gms.measurement.internal.zzai zzb(java.lang.String)
com.google.android.gms.internal.measurement.zzje: int zza(java.lang.Object[],int)
androidx.core.os.LocaleListCompatWrapper: LocaleListCompatWrapper(java.util.Locale[])
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.example.tapify_admin.MainActivity: MainActivity()
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLargeIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.google.android.exoplayer2.PlaylistTimeline: com.google.android.exoplayer2.Timeline getTimelineByChildIndex(int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
androidx.core.os.LocaleListCompatWrapper: java.util.Locale get(int)
com.google.android.gms.vision.barcode.Barcode$ContactInfo: void writeToParcel(android.os.Parcel,int)
androidx.constraintlayout.solver.widgets.VirtualLayout: void captureWidgets()
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle setBigContentTitle(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannels(android.app.NotificationManager,java.util.List)
com.google.android.gms.internal.vision.zzlx: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.google.android.gms.internal.clearcut.zzdf: com.google.android.gms.internal.clearcut.zzdm zzb(java.lang.Class)
com.google.android.gms.flags.impl.FlagProviderImpl: long getLongFlagValue(java.lang.String,long,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzcf)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.channels.ArrayChannel: void enqueueElement(int,java.lang.Object)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup withAdCount(int)
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] values()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.SolverVariableValues: java.lang.String toString()
kotlinx.coroutines.channels.ArrayChannel: void ensureCapacity(int)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.util.Pools$SimplePool: java.lang.Object acquire()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.google.common.collect.Iterators$EmptyModifiableIterator: com.google.common.collect.Iterators$EmptyModifiableIterator[] values()
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLedInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean seekInsideBufferUs(boolean[],long)
com.google.android.material.shape.ShapeAppearancePathProvider: void setEdgePathAndTransform(int)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.extractor.avi.AviExtractor: void seek(long,long)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannel(android.app.NotificationManager,android.app.NotificationChannel)
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle setConversationTitle(android.app.Notification$MessagingStyle,java.lang.CharSequence)
androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannelGroup(android.app.NotificationManager,java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
org.threeten.bp.format.TextStyle: org.threeten.bp.format.TextStyle[] values()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
androidx.collection.ArraySet: int indexOf(java.lang.Object,int)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void release()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzcf)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.google.android.exoplayer2.MediaPeriodHolder: void disassociateNoSampleRenderersWithEmptySampleStream(com.google.android.exoplayer2.source.SampleStream[])
androidx.core.view.ViewCompat$Api18Impl: android.graphics.Rect getClipBounds(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
com.google.gson.stream.JsonWriter: void string(java.lang.String)
org.threeten.bp.chrono.ThaiBuddhistDate: java.lang.Object writeReplace()
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: void discardBuffer(long,boolean)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.amolg.flutterbarcodescanner.BarcodeCaptureActivity: void onClick(android.view.View)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
com.google.android.gms.internal.measurement.zznl: int zza()
androidx.webkit.internal.ApiHelperForM: void setOffscreenPreRaster(android.webkit.WebSettings,boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describeIcon(androidx.core.graphics.drawable.IconCompat)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.exoplayer2.extractor.avi.AviExtractor: void parseIdx1Body(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initAndroidThreeTen(android.content.Context)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
androidx.window.java.R: R()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setEnterpriseAuthenticationAppLinkPolicyEnabled(boolean)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
org.threeten.bp.format.DateTimeFormatterBuilder$CompositePrinterParser: java.lang.String toString()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.window.embedding.SplitInfo: float getSplitRatio()
org.threeten.bp.chrono.HijrahDate: int getMaximumDayOfMonth()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod: void discardBuffer(long,boolean)
com.google.android.gms.internal.measurement.zzmr: java.lang.Object get(int)
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
com.google.android.exoplayer2.source.SampleQueue: void commitSample(long,int,long,int,com.google.android.exoplayer2.extractor.TrackOutput$CryptoData)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: boolean getValue(java.lang.Boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: BaseTrackSelection(com.google.android.exoplayer2.source.TrackGroup,int[],int)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
org.threeten.bp.zone.ZoneOffsetTransition: java.lang.Object writeReplace()
com.google.android.gms.internal.vision.zzfi$zzf$zza: com.google.android.gms.internal.vision.zzfi$zzf$zza[] values()
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: $Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableSet createKeySet()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
androidx.collection.LongSparseArray: void removeAt(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.google.android.gms.internal.measurement.zzml: com.google.android.gms.internal.measurement.zzlf zzA(int)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
dev.fluttercommunity.plus.share.ShareFileProvider: ShareFileProvider()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
androidx.window.embedding.ActivityFilter: java.lang.String toString()
org.threeten.bp.chrono.HijrahDate: void addDeviationAsHijrah(int,int,int,int,int)
org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition: org.threeten.bp.zone.ZoneOffsetTransitionRule$TimeDefinition[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: byte[] castObjectToByteArray(java.lang.Object)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.constraintlayout.solver.widgets.Guideline: void setOrientation(int)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.ArrayList readMessages(java.util.ArrayList)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateNextNotificationTrigger(long,long)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.extractor.ts.UserDataReader: void consume(long,com.google.android.exoplayer2.util.ParsableByteArray)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: boolean directMeasure(boolean)
org.threeten.bp.chrono.JapaneseEra: java.lang.Object readResolve()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.android.exoplayer2.extractor.avi.AviExtractor: com.google.android.exoplayer2.extractor.avi.ChunkReader getChunkReader(int)
com.google.android.exoplayer2.PlaylistTimeline: PlaylistTimeline(java.util.Collection,com.google.android.exoplayer2.source.ShuffleOrder)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: NotificationChannelAction(java.lang.String,int)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.google.android.gms.internal.vision.zzfi$zzg$zzd: com.google.android.gms.internal.vision.zzfi$zzg$zzd[] values()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()
com.google.android.gms.internal.vision.zzla: java.lang.Object[] zze()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
com.google.android.gms.internal.vision.zzko: com.google.android.gms.internal.vision.zzlc zza(int)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void mapSampleQueuesToMatchTrackGroups()
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.webkit.internal.ApiHelperForP: java.lang.ClassLoader getWebViewClassLoader()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails from(java.util.Map)
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int getAdaptiveSupport(int,int,boolean)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource: void release()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidBigPictureResources(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.google.android.material.shape.MaterialShapeDrawable: void drawCompatShadow(android.graphics.Canvas)
androidx.collection.ArraySet: void allocArrays(int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
com.google.android.exoplayer2.extractor.ts.SeiReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.core.os.LocaleListCompatWrapper: int hashCode()
com.google.android.exoplayer2.drm.DrmInitData: DrmInitData(android.os.Parcel)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.core.app.AlarmManagerCompat$Api19Impl: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void setSampleOffsetUs(long)
androidx.core.util.Pools$SimplePool: boolean release(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.google.android.exoplayer2.drm.FrameworkMediaDrm$Api31: void setLogSessionIdOnMediaDrmSession(android.media.MediaDrm,byte[],com.google.android.exoplayer2.analytics.PlayerId)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
androidx.core.app.NotificationCompat$MessagingStyle$Api16Impl: android.app.Notification$BigTextStyle bigText(android.app.Notification$BigTextStyle,java.lang.CharSequence)
androidx.window.embedding.SplitController: SplitController()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeFinishPrepare()
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
com.google.android.exoplayer2.source.CompositeSequenceableLoader: long getNextLoadPositionUs()
com.google.android.gms.internal.measurement.zzbn: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.constraintlayout.widget.ConstraintSet$Motion: void fillFromAttributeList(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertCookieManager(java.lang.Object)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
kotlin.jvm.internal.CallableReference: boolean isAbstract()
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser: java.lang.Object build()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forOngoingCall(android.app.Person,android.app.PendingIntent)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.window.core.Bounds: boolean isEmpty()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
io.flutter.embedding.engine.loader.FlutterLoader$$InternalSyntheticLambda$2$c4d0243e86ba0015755b9d819904cfb8849fe6330840ee6b64aad6dc6a885b5e$0: void run()
org.threeten.bp.ZonedDateTime: java.lang.Object writeReplace()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
com.google.android.exoplayer2.audio.MpegAudioUtil: java.lang.String[] access$100()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: KeyboardManager$PerEventCallbackBuilder(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
androidx.webkit.internal.ApiHelperForM: void setWebMessageCallback(android.webkit.WebMessagePort,androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void areNotificationsEnabled(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.chip.Chip: void setElevation(float)
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean canCreateNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
org.threeten.bp.YearMonth: java.lang.Object writeReplace()
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.google.android.gms.internal.clearcut.zzed: java.lang.Object zzcw()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
com.amolg.flutterbarcodescanner.BarcodeCaptureActivity$SCAN_MODE_ENUM: com.amolg.flutterbarcodescanner.BarcodeCaptureActivity$SCAN_MODE_ENUM[] values()
com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.zzx zzc(java.lang.String,boolean,boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
kotlinx.coroutines.internal.ArrayQueue: void ensureCapacity()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.fragment.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describePerson(androidx.core.app.Person)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: com.google.android.exoplayer2.Format getSelectedFormat()
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
com.google.android.material.card.MaterialCardView: float getRadius()
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.measurement.zznl: boolean equals(java.lang.Object)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
org.threeten.bp.zone.StandardZoneRules: void writeExternal(java.io.DataOutput)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.google.android.gms.internal.clearcut.zzge$zzs$zzc: com.google.android.gms.internal.clearcut.zzge$zzs$zzc[] values()
com.google.android.exoplayer2.source.TrackGroup: boolean equals(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
androidx.fragment.app.FragmentManagerImpl: void restoreSaveState(android.os.Parcelable)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$200(com.google.android.material.shape.MaterialShapeDrawable)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.audio.DefaultAudioSink$Api23: void setPreferredDeviceOnAudioTrack(android.media.AudioTrack,com.google.android.exoplayer2.audio.DefaultAudioSink$AudioDeviceInfoApi23)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.android.exoplayer2.util.CodecSpecificDataUtil: java.lang.String buildHevcCodecString(int,boolean,int,int,int[],int)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canApplyTheme()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api19Impl: android.os.Bundle getExtras(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.core.app.ActivityCompat$Api31Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: DefaultDashChunkSource(com.google.android.exoplayer2.source.chunk.ChunkExtractor$Factory,com.google.android.exoplayer2.upstream.LoaderErrorThrower,com.google.android.exoplayer2.source.dash.manifest.DashManifest,com.google.android.exoplayer2.source.dash.BaseUrlExclusionList,int,int[],com.google.android.exoplayer2.trackselection.ExoTrackSelection,int,com.google.android.exoplayer2.upstream.DataSource,long,int,boolean,java.util.List,com.google.android.exoplayer2.source.dash.PlayerEmsgHandler$PlayerTrackEmsgHandler,com.google.android.exoplayer2.analytics.PlayerId)
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
org.threeten.bp.Ser: Ser()
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int indexOf(com.google.android.exoplayer2.Format)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.google.android.exoplayer2.source.dash.DashMediaPeriod: void updateManifest(com.google.android.exoplayer2.source.dash.manifest.DashManifest,int)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: android.media.MediaCodecInfo getCodecInfoAt(int)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.google.android.gms.internal.measurement.zzmr: boolean add(java.lang.Object)
androidx.webkit.internal.ApiHelperForM: android.webkit.WebMessagePort[] createWebMessageChannel(android.webkit.WebView)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.internal.flags.zzb: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.app.NotificationCompat$MessagingStyle$Api26Impl: android.app.Notification$MessagingStyle addHistoricMessage(android.app.Notification$MessagingStyle,android.app.Notification$MessagingStyle$Message)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
com.google.android.exoplayer2.extractor.ogg.VorbisReader: boolean readHeaders(com.google.android.exoplayer2.util.ParsableByteArray,long,com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void enableRestrictSensitiveWebContent()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall build()
com.google.android.exoplayer2.drm.DrmUtil$Api21: boolean isMediaDrmStateException(java.lang.Throwable)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setForegroundModeInternal(boolean,java.util.concurrent.atomic.AtomicBoolean)
com.google.android.exoplayer2.MediaPeriodHolder: void enableTrackSelectionsInResult()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readSoundInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.PendingIntent getActivityPendingIntent(android.content.Context,int,android.content.Intent)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.google.android.gms.internal.clearcut.zzey: void zzb(com.google.android.gms.internal.clearcut.zzfr)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.window.embedding.ActivityStack: boolean isEmpty()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
com.amolg.flutterbarcodescanner.BarcodeCaptureActivity$1: void onClick(android.view.View)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setContentType(android.media.AudioAttributes$Builder,int)
androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void show(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void release()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
androidx.window.embedding.ActivityStack: java.lang.String toString()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.google.android.gms.internal.measurement.zzml: java.lang.Object zzC(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: SsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String)
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.exoplayer2.extractor.FlacMetadataReader: java.util.List readVorbisCommentMetadataBlock(com.google.android.exoplayer2.extractor.ExtractorInput,int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: java.lang.String getVariationsHeader()
org.threeten.bp.format.SignStyle: org.threeten.bp.format.SignStyle valueOf(java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMaxEnd(int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
com.google.android.gms.internal.clearcut.zzfl: com.google.android.gms.internal.clearcut.zzfl[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
com.google.android.exoplayer2.ExoPlayerImplInternal: void notifyTrackSelectionRebuffer()
androidx.collection.SimpleArrayMap: void clear()
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
org.threeten.bp.Period: java.lang.Object readResolve()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
org.threeten.bp.temporal.IsoFields$Field: org.threeten.bp.temporal.IsoFields$Field[] values()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.google.android.exoplayer2.extractor.ts.UserDataReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.os.Parcelable onSaveInstanceState()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: android.media.MediaCodecInfo$CodecProfileLevel[] getProfileLevels()
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.google.android.gms.internal.clearcut.zzgy: void zza(com.google.android.gms.internal.clearcut.zzfs)
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void packetFinished()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcf)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigPictureStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
androidx.window.embedding.SplitPairFilter: int hashCode()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
com.google.android.gms.measurement.internal.zzlo: int zzl(java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$Api31: void setLogSessionIdToMediaCodecFormat(com.google.android.exoplayer2.mediacodec.MediaCodecAdapter$Configuration,com.google.android.exoplayer2.analytics.PlayerId)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $values()
com.google.android.gms.internal.measurement.zzix: com.google.android.gms.internal.measurement.zzja zzb()
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannel(android.app.NotificationManager,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable acquireSolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $values()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.constraintlayout.solver.widgets.Barrier: java.lang.String toString()
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeUpdateReadingPeriod()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: FlutterLocalNotificationsPlugin()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.vision.clearcut.LoggingConnectionCallbacks: void onConnectionSuspended(int)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.webkit.internal.ApiHelperForM: boolean getOffscreenPreRaster(android.webkit.WebSettings)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: void release()
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: int hashCode()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
com.google.android.gms.vision.clearcut.VisionClearcutLogger: void zza(int,com.google.android.gms.internal.vision.zzfi$zzo)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.google.android.exoplayer2.source.ads.AdPlaybackState: int hashCode()
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzci)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
androidx.cardview.widget.CardView: int getContentPaddingTop()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: BooleanUtils()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void removeNotificationFromCache(android.content.Context,java.lang.Integer)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: boolean readSample(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.SampleQueue createSampleQueue(int,int)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.google.android.gms.measurement.internal.zzlo: int zzh(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: boolean onChunkLoadError(com.google.android.exoplayer2.source.chunk.Chunk,boolean,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.cardview.widget.CardView: float getMaxCardElevation()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getCapacity()
com.google.android.gms.common.data.DataHolder: void close()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
kotlin.jvm.internal.Lambda: int getArity()
com.google.android.exoplayer2.audio.AudioCapabilities$Api29: int[] getDirectPlaybackSupportedEncodings()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
com.google.android.gms.flags.zzd: zzd()
com.google.android.gms.internal.measurement.zznl: void zzi(java.lang.StringBuilder,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebAuthnSupport()
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.google.common.base.AbstractIterator$State: com.google.common.base.AbstractIterator$State valueOf(java.lang.String)
com.google.android.exoplayer2.metadata.Metadata: Metadata(android.os.Parcel)
androidx.cardview.widget.CardView: float getCardElevation()
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int getAdaptiveSupport(int,int,int[])
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
com.google.android.exoplayer2.drm.DrmUtil$Api23: boolean isMediaDrmResetException(java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.google.android.gms.internal.measurement.zznl: void zzk(com.google.android.gms.internal.measurement.zzoc)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
com.google.android.exoplayer2.text.cea.Cea708Decoder: void resetCueBuilders()
com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.window.embedding.MatcherUtils: MatcherUtils()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: android.app.Notification$MessagingStyle createMessagingStyle(android.app.Person)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
org.threeten.bp.chrono.HijrahEra: java.lang.Object writeReplace()
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzik getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
com.google.android.exoplayer2.source.chunk.ChunkSampleStream: void onLoaderReleased()
com.amolg.flutterbarcodescanner.BarcodeCaptureActivity$SCAN_MODE_ENUM: com.amolg.flutterbarcodescanner.BarcodeCaptureActivity$SCAN_MODE_ENUM valueOf(java.lang.String)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
org.threeten.bp.LocalDate: java.lang.Object readResolve()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
org.threeten.bp.temporal.ChronoUnit: org.threeten.bp.temporal.ChronoUnit[] values()
kotlinx.coroutines.internal.ThreadSafeHeap: void siftUpFrom(int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
org.threeten.bp.LocalTime: org.threeten.bp.LocalTime create(int,int,int,int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
androidx.constraintlayout.solver.LinearSystem: void minimize()
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
com.amolg.flutterbarcodescanner.BarcodeCaptureActivity$USE_FLASH: com.amolg.flutterbarcodescanner.BarcodeCaptureActivity$USE_FLASH valueOf(java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.google.android.gms.measurement.internal.zzhb: java.lang.String zzb(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
kotlin.jvm.internal.CallableReference: boolean isSuspend()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.google.android.exoplayer2.util.Util: java.util.HashMap createIsoLanguageReplacementMap()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.constraintlayout.solver.widgets.analyzer.DependencyGraph: void measureWidgets()
com.google.android.exoplayer2.source.CompositeSequenceableLoader: boolean isLoading()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
com.google.android.exoplayer2.ExoPlayerImplInternal: void stopRenderers()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType[] values()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: boolean continueLoading(long)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String getPath()
com.dexterous.flutterlocalnotifications.utils.StringUtils: StringUtils()
androidx.window.embedding.SplitController: void clearRegisteredRules()
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] values()
androidx.cardview.widget.CardView: int getContentPaddingBottom()
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
com.google.android.material.chip.ChipGroup: int getChipCount()
androidx.constraintlayout.solver.PriorityGoalRow: void removeGoal(androidx.constraintlayout.solver.SolverVariable)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource: void updateManifest(com.google.android.exoplayer2.source.dash.manifest.DashManifest,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigPictureStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void onEmsgLeafAtomRead(com.google.android.exoplayer2.util.ParsableByteArray)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: ScheduledNotificationRepeatFrequency(java.lang.String,int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
com.google.android.material.button.MaterialButton: int getTextHeight()
com.google.android.gms.internal.vision.zzlb: void add(int,java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroups(android.app.NotificationManager,java.util.List)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readInboxStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
org.threeten.bp.chrono.MinguoChronology: java.lang.Object readResolve()
androidx.webkit.WebMessageCompat: androidx.webkit.WebMessagePortCompat[] getPorts()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void initExtraTracks()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void pendingNotificationRequests(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
com.google.android.exoplayer2.audio.DefaultAudioSink: void configure(com.google.android.exoplayer2.Format,int,int[])
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.google.android.exoplayer2.decoder.SimpleDecoder: boolean decode()
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleC1Command(int)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.window.embedding.SplitRule: int getMinWidth()
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: DefaultAudioSink$DefaultAudioProcessorChain(com.google.android.exoplayer2.audio.AudioProcessor[],com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor,com.google.android.exoplayer2.audio.SonicAudioProcessor)
com.google.android.material.button.MaterialButton: int getIconGravity()
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
org.threeten.bp.temporal.IsoFields$Unit: org.threeten.bp.temporal.IsoFields$Unit valueOf(java.lang.String)
com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput: com.google.android.exoplayer2.extractor.TrackOutput track(int,int)
com.google.android.exoplayer2.extractor.mp4.Track: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox getSampleDescriptionEncryptionBox(int)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: boolean onCreate()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
com.google.android.gms.internal.clearcut.zzgy: zzgy()
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.activity.ComponentActivity: ComponentActivity()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
org.threeten.bp.chrono.Ser: java.lang.Object readResolve()
com.google.android.gms.measurement.internal.zzai: java.lang.String zzh()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean continueLoading(long)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson buildGson()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.collection.ArraySet: boolean add(java.lang.Object)
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
com.google.android.exoplayer2.ExoPlayerImpl$Api31: com.google.android.exoplayer2.analytics.PlayerId registerMediaMetricsListener(android.content.Context,com.google.android.exoplayer2.ExoPlayerImpl,boolean)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
com.google.android.exoplayer2.extractor.jpeg.XmpMotionPhotoDescriptionParser: long parseMotionPhotoPresentationTimestampUsFromDescription(org.xmlpull.v1.XmlPullParser)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
org.threeten.bp.ZoneOffset: java.lang.Object writeReplace()
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder createBuilder()
com.google.common.base.Function: java.lang.Object apply(java.lang.Object)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
androidx.core.view.GravityCompat$Api17Impl: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: NotificationChannelGroupDetails()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationAppLaunchDetails(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean seekInsideBufferUs(long)
com.google.android.exoplayer2.text.cea.Cea708Decoder: java.util.List getDisplayCues()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForO: android.content.pm.PackageInfo getCurrentWebViewPackage()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor,boolean)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api16Impl: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: com.google.android.exoplayer2.source.TrackGroupArray getTrackGroups(int)
androidx.window.core.Version: int hashCode()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: int getInsetTop()
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMinEnd(int)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean replaceStreamsOrDisableRendererForTransition()
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] values()
com.google.android.gms.internal.clearcut.zzdf: boolean zza(java.lang.Class)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: void onReceive(android.content.Context,android.content.Intent)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.recyclerview.widget.GridLayoutManager: void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.google.common.collect.RegularImmutableSet: <clinit>()
androidx.window.core.Version: int getMinor()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata copyWithAppendedEntries(com.google.android.exoplayer2.metadata.Metadata$Entry[])
com.google.android.exoplayer2.source.dash.DashMediaPeriod: DashMediaPeriod(int,com.google.android.exoplayer2.source.dash.manifest.DashManifest,com.google.android.exoplayer2.source.dash.BaseUrlExclusionList,int,com.google.android.exoplayer2.source.dash.DashChunkSource$Factory,com.google.android.exoplayer2.upstream.TransferListener,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.drm.DrmSessionEventListener$EventDispatcher,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher,long,com.google.android.exoplayer2.upstream.LoaderErrorThrower,com.google.android.exoplayer2.upstream.Allocator,com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory,com.google.android.exoplayer2.source.dash.PlayerEmsgHandler$PlayerEmsgCallback,com.google.android.exoplayer2.analytics.PlayerId)
org.threeten.bp.chrono.JapaneseDate: void readObject(java.io.ObjectInputStream)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
